%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, March 17, 2016 6:36:16 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
0 0 390 363 rc
1.00000 w
q
0.752941 0.752941 0.752941 RG
newpath
27.2672 348.500 m
27.2672 14.0345 l
S
newpath
83.0115 348.500 m
83.0115 14.0345 l
S
newpath
138.755 348.500 m
138.755 14.0345 l
S
newpath
194.500 348.500 m
194.500 14.0345 l
S
newpath
250.244 348.500 m
250.244 14.0345 l
S
newpath
305.988 348.500 m
305.988 14.0345 l
S
newpath
361.732 348.500 m
361.732 14.0345 l
S
Q
1.50000 w
1.00000 w
q
0.752941 0.752941 0.752941 RG
newpath
27.2672 348.500 m
361.732 348.500 l
S
newpath
27.2672 292.755 m
361.732 292.755 l
S
newpath
27.2672 237.011 m
361.732 237.011 l
S
newpath
27.2672 181.267 m
361.732 181.267 l
S
newpath
27.2672 125.523 m
361.732 125.523 l
S
newpath
27.2672 69.7788 m
361.732 69.7788 l
S
newpath
27.2672 14.0345 m
361.732 14.0345 l
S
Q
1.50000 w
q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
83.0115 181.267 m
88.5859 181.267 l
S
newpath
71.8626 172.905 m
88.5859 181.267 l
71.8626 189.628 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
194.500 292.755 m
194.500 287.181 l
S
newpath
186.138 303.904 m
194.500 287.181 l
202.861 303.904 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
194.500 69.7788 m
194.500 75.3532 l
S
newpath
202.861 58.6299 m
194.500 75.3532 l
186.138 58.6299 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
305.988 181.267 m
300.414 181.267 l
S
newpath
317.137 189.628 m
300.414 181.267 l
317.137 172.905 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
273.334 102.433 m
269.392 106.374 l
S
newpath
287.130 100.462 m
269.392 106.374 l
275.305 88.6369 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
273.334 260.101 m
269.392 256.159 l
S
newpath
275.305 273.897 m
269.392 256.159 l
287.130 262.072 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
115.665 102.433 m
119.607 106.374 l
S
newpath
113.694 88.6369 m
119.607 106.374 l
101.869 100.462 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
1.00000 0 0 RG
24.2672 10.0345 341.465 341.465 rc
newpath
115.665 260.101 m
119.607 256.159 l
S
newpath
101.869 262.072 m
119.607 256.159 l
113.694 273.897 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
363.069 12.6978 m
359.731 16.0357 l
356.459 19.3075 l
353.252 22.5145 l
350.109 25.6580 l
347.027 28.7393 l
344.007 31.7595 l
341.047 34.7200 l
338.145 37.6218 l
335.301 40.4662 l
332.513 43.2543 l
329.780 45.9871 l
327.101 48.6658 l
324.475 51.2915 l
321.902 53.8652 l
319.379 56.3879 l
316.906 58.8607 l
314.482 61.2845 l
312.106 63.6603 l
309.778 65.9891 l
307.495 68.2717 l
305.258 70.5092 l
303.064 72.7024 l
300.915 74.8521 l
298.808 76.9593 l
296.742 79.0247 l
294.718 81.0492 l
292.733 83.0337 l
290.788 84.9788 l
288.881 86.8855 l
287.012 88.7543 l
285.181 90.5862 l
283.385 92.3819 l
281.625 94.1419 l
279.900 95.8671 l
278.209 97.5581 l
276.551 99.2157 l
274.926 100.840 l
273.334 102.433 l
271.773 103.994 l
270.243 105.524 l
268.743 107.024 l
267.273 108.494 l
265.832 109.935 l
264.419 111.347 l
263.035 112.732 l
261.678 114.089 l
260.347 115.419 l
259.044 116.723 l
257.766 118.001 l
256.513 119.254 l
255.285 120.482 l
254.081 121.685 l
252.901 122.865 l
251.745 124.021 l
250.611 125.155 l
249.500 126.266 l
248.411 127.355 l
247.344 128.423 l
246.297 129.469 l
245.272 130.495 l
244.266 131.500 l
243.281 132.485 l
242.315 133.451 l
241.368 134.398 l
240.440 135.326 l
239.530 136.236 l
238.639 137.128 l
237.765 138.002 l
236.908 138.858 l
236.068 139.698 l
235.245 140.521 l
234.438 141.328 l
233.647 142.119 l
232.872 142.894 l
232.112 143.654 l
231.368 144.399 l
230.638 145.129 l
229.922 145.844 l
229.221 146.546 l
228.533 147.233 l
227.859 147.907 l
227.199 148.568 l
226.551 149.215 l
225.917 149.850 l
225.294 150.472 l
224.685 151.082 l
224.087 151.679 l
223.501 152.265 l
222.927 152.840 l
222.364 153.402 l
221.812 153.954 l
221.271 154.495 l
220.741 155.025 l
220.222 155.545 l
219.712 156.054 l
219.213 156.553 l
218.724 157.043 l
218.244 157.522 l
217.774 157.993 l
217.313 158.453 l
216.861 158.905 l
216.418 159.348 l
215.984 159.782 l
215.559 160.207 l
215.142 160.624 l
214.733 161.033 l
214.333 161.434 l
213.940 161.827 l
213.555 162.211 l
213.178 162.589 l
212.808 162.959 l
212.445 163.321 l
212.090 163.677 l
211.742 164.025 l
211.400 164.366 l
211.065 164.701 l
210.737 165.029 l
210.416 165.350 l
210.101 165.666 l
209.792 165.975 l
209.489 166.277 l
209.192 166.574 l
208.901 166.865 l
208.616 167.150 l
208.337 167.430 l
208.063 167.704 l
207.794 167.972 l
207.531 168.236 l
207.273 168.494 l
207.020 168.747 l
206.772 168.994 l
206.529 169.237 l
206.291 169.476 l
206.057 169.709 l
205.828 169.938 l
205.604 170.162 l
205.384 170.382 l
205.169 170.598 l
204.957 170.809 l
204.750 171.016 l
204.547 171.219 l
204.348 171.418 l
204.153 171.613 l
203.962 171.804 l
203.775 171.992 l
203.591 172.175 l
203.411 172.355 l
203.235 172.532 l
203.062 172.705 l
202.892 172.874 l
202.726 173.040 l
202.563 173.203 l
202.403 173.363 l
202.247 173.519 l
202.093 173.673 l
201.943 173.823 l
201.796 173.971 l
201.651 174.115 l
201.510 174.257 l
201.371 174.396 l
201.235 174.532 l
201.101 174.665 l
200.971 174.796 l
200.843 174.924 l
200.717 175.049 l
200.594 175.173 l
200.473 175.293 l
200.355 175.412 l
200.239 175.527 l
200.125 175.641 l
200.014 175.753 l
199.905 175.862 l
199.798 175.969 l
199.693 176.074 l
199.590 176.176 l
199.489 176.277 l
199.390 176.376 l
199.293 176.473 l
199.199 176.568 l
199.105 176.661 l
199.014 176.752 l
198.925 176.841 l
198.837 176.929 l
198.751 177.015 l
198.667 177.099 l
198.585 177.182 l
198.504 177.263 l
198.424 177.342 l
198.347 177.420 l
198.271 177.496 l
198.196 177.570 l
198.123 177.644 l
198.051 177.715 l
197.981 177.786 l
197.912 177.855 l
197.844 177.922 l
197.778 177.988 l
197.713 178.053 l
197.649 178.117 l
197.587 178.179 l
197.526 178.241 l
197.466 178.300 l
197.407 178.359 l
197.350 178.417 l
197.293 178.473 l
197.238 178.528 l
197.184 178.583 l
197.131 178.636 l
197.078 178.688 l
197.027 178.739 l
196.977 178.789 l
196.928 178.838 l
196.880 178.886 l
196.833 178.933 l
196.787 178.980 l
196.741 179.025 l
196.697 179.069 l
196.654 179.113 l
196.611 179.155 l
196.569 179.197 l
196.528 179.238 l
196.488 179.278 l
196.449 179.318 l
196.410 179.356 l
196.372 179.394 l
196.335 179.431 l
196.299 179.468 l
196.263 179.503 l
196.228 179.538 l
196.194 179.572 l
196.160 179.606 l
196.128 179.639 l
196.095 179.671 l
196.064 179.703 l
196.033 179.734 l
196.002 179.764 l
195.973 179.794 l
195.943 179.823 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
363.069 349.836 m
359.731 346.498 l
356.459 343.227 l
353.252 340.020 l
350.109 336.876 l
347.027 333.795 l
344.007 330.774 l
341.047 327.814 l
338.145 324.912 l
335.301 322.068 l
332.513 319.280 l
329.780 316.547 l
327.101 313.868 l
324.475 311.243 l
321.902 308.669 l
319.379 306.146 l
316.906 303.673 l
314.482 301.250 l
312.106 298.874 l
309.778 296.545 l
307.495 294.262 l
305.258 292.025 l
303.064 289.832 l
300.915 287.682 l
298.808 285.575 l
296.742 283.509 l
294.718 281.485 l
292.733 279.500 l
290.788 277.555 l
288.881 275.649 l
287.012 273.780 l
285.181 271.948 l
283.385 270.152 l
281.625 268.392 l
279.900 266.667 l
278.209 264.976 l
276.551 263.318 l
274.926 261.694 l
273.334 260.101 l
271.773 258.540 l
270.243 257.010 l
268.743 255.510 l
267.273 254.040 l
265.832 252.599 l
264.419 251.187 l
263.035 249.802 l
261.678 248.445 l
260.347 247.115 l
259.044 245.811 l
257.766 244.533 l
256.513 243.280 l
255.285 242.052 l
254.081 240.848 l
252.901 239.669 l
251.745 238.512 l
250.611 237.379 l
249.500 236.268 l
248.411 235.179 l
247.344 234.111 l
246.297 233.065 l
245.272 232.039 l
244.266 231.034 l
243.281 230.048 l
242.315 229.082 l
241.368 228.135 l
240.440 227.207 l
239.530 226.298 l
238.639 225.406 l
237.765 224.532 l
236.908 223.675 l
236.068 222.836 l
235.245 222.012 l
234.438 221.206 l
233.647 220.415 l
232.872 219.640 l
232.112 218.880 l
231.368 218.135 l
230.638 217.405 l
229.922 216.689 l
229.221 215.988 l
228.533 215.300 l
227.859 214.627 l
227.199 213.966 l
226.551 213.318 l
225.917 212.684 l
225.294 212.062 l
224.685 211.452 l
224.087 210.854 l
223.501 210.268 l
222.927 209.694 l
222.364 209.131 l
221.812 208.579 l
221.271 208.039 l
220.741 207.508 l
220.222 206.989 l
219.712 206.480 l
219.213 205.980 l
218.724 205.491 l
218.244 205.011 l
217.774 204.541 l
217.313 204.080 l
216.861 203.628 l
216.418 203.186 l
215.984 202.752 l
215.559 202.326 l
215.142 201.909 l
214.733 201.500 l
214.333 201.100 l
213.940 200.707 l
213.555 200.322 l
213.178 199.945 l
212.808 199.575 l
212.445 199.212 l
212.090 198.857 l
211.742 198.509 l
211.400 198.167 l
211.065 197.833 l
210.737 197.505 l
210.416 197.183 l
210.101 196.868 l
209.792 196.559 l
209.489 196.256 l
209.192 195.959 l
208.901 195.669 l
208.616 195.383 l
208.337 195.104 l
208.063 194.830 l
207.794 194.561 l
207.531 194.298 l
207.273 194.040 l
207.020 193.787 l
206.772 193.539 l
206.529 193.296 l
206.291 193.058 l
206.057 192.824 l
205.828 192.596 l
205.604 192.371 l
205.384 192.151 l
205.169 191.936 l
204.957 191.725 l
204.750 191.518 l
204.547 191.315 l
204.348 191.116 l
204.153 190.921 l
203.962 190.729 l
203.775 190.542 l
203.591 190.358 l
203.411 190.178 l
203.235 190.002 l
203.062 189.829 l
202.892 189.659 l
202.726 189.493 l
202.563 189.330 l
202.403 189.171 l
202.247 189.014 l
202.093 188.861 l
201.943 188.710 l
201.796 188.563 l
201.651 188.419 l
201.510 188.277 l
201.371 188.138 l
201.235 188.002 l
201.101 187.869 l
200.971 187.738 l
200.843 187.610 l
200.717 187.484 l
200.594 187.361 l
200.473 187.240 l
200.355 187.122 l
200.239 187.006 l
200.125 186.893 l
200.014 186.781 l
199.905 186.672 l
199.798 186.565 l
199.693 186.460 l
199.590 186.357 l
199.489 186.256 l
199.390 186.158 l
199.293 186.061 l
199.199 185.966 l
199.105 185.873 l
199.014 185.782 l
198.925 185.692 l
198.837 185.605 l
198.751 185.519 l
198.667 185.434 l
198.585 185.352 l
198.504 185.271 l
198.424 185.192 l
198.347 185.114 l
198.271 185.038 l
198.196 184.963 l
198.123 184.890 l
198.051 184.818 l
197.981 184.748 l
197.912 184.679 l
197.844 184.611 l
197.778 184.545 l
197.713 184.480 l
197.649 184.417 l
197.587 184.354 l
197.526 184.293 l
197.466 184.233 l
197.407 184.174 l
197.350 184.117 l
197.293 184.060 l
197.238 184.005 l
197.184 183.951 l
197.131 183.898 l
197.078 183.846 l
197.027 183.795 l
196.977 183.745 l
196.928 183.696 l
196.880 183.647 l
196.833 183.600 l
196.787 183.554 l
196.741 183.509 l
196.697 183.464 l
196.654 183.421 l
196.611 183.378 l
196.569 183.336 l
196.528 183.295 l
196.488 183.255 l
196.449 183.216 l
196.410 183.177 l
196.372 183.139 l
196.335 183.102 l
196.299 183.066 l
196.263 183.030 l
196.228 182.995 l
196.194 182.961 l
196.160 182.928 l
196.128 182.895 l
196.095 182.863 l
196.064 182.831 l
196.033 182.800 l
196.002 182.770 l
195.973 182.740 l
195.943 182.711 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
25.9305 12.6978 m
193.056 179.823 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
25.9305 349.836 m
193.056 182.711 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
24.8188 181.267 m
192.458 181.267 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
194.500 350.948 m
194.500 183.309 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
194.500 11.5860 m
194.500 179.225 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
4.00000 w
1.00000 0 0 RG
23.2672 9.03453 343.465 343.465 rc
newpath
364.181 181.267 m
196.542 181.267 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
Q
q
q
1.00000 w
newpath
27.2672 181.267 m
361.732 181.267 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
265 214 27 40 rc
newpath
272.984 225.843 m
273.349 226.229 273.625 226.614 273.812 227.000  c
273.947 227.270 274.171 227.979 274.484 229.125  c
275.468 227.640 l
275.729 227.286 276.046 226.945 276.421 226.617  c
276.796 226.289 277.125 226.067 277.406 225.953  c
277.593 225.880 277.791 225.843 278.000 225.843  c
278.322 225.843 278.580 225.929 278.773 226.101  c
278.966 226.273 279.062 226.479 279.062 226.718  c
279.062 227.010 279.005 227.208 278.890 227.312  c
278.682 227.500 278.442 227.593 278.171 227.593  c
278.015 227.593 277.849 227.557 277.671 227.484  c
277.317 227.369 277.083 227.312 276.968 227.312  c
276.781 227.312 276.567 227.416 276.328 227.625  c
275.859 228.010 275.302 228.760 274.656 229.875  c
275.578 233.750 l
275.724 234.333 275.846 234.684 275.945 234.804  c
276.044 234.924 276.140 234.984 276.234 234.984  c
276.390 234.984 276.572 234.895 276.781 234.718  c
277.197 234.375 277.552 233.927 277.843 233.375  c
278.234 233.578 l
277.765 234.463 277.166 235.197 276.437 235.781  c
276.020 236.104 275.671 236.265 275.390 236.265  c
274.974 236.265 274.640 236.031 274.390 235.562  c
274.234 235.270 273.906 234.010 273.406 231.781  c
272.239 233.812 271.307 235.119 270.609 235.703  c
270.151 236.078 269.708 236.265 269.281 236.265  c
268.979 236.265 268.703 236.156 268.453 235.937  c
268.276 235.781 268.187 235.562 268.187 235.281  c
268.187 235.031 268.270 234.825 268.437 234.664  c
268.604 234.502 268.807 234.421 269.046 234.421  c
269.286 234.421 269.541 234.541 269.812 234.781  c
270.000 234.947 270.151 235.031 270.265 235.031  c
270.349 235.031 270.463 234.974 270.609 234.859  c
270.963 234.567 271.442 233.950 272.046 233.007  c
272.651 232.065 273.046 231.385 273.234 230.968  c
272.765 229.145 272.515 228.182 272.484 228.078  c
272.307 227.599 272.080 227.257 271.804 227.054  c
271.528 226.851 271.119 226.750 270.578 226.750  c
270.411 226.750 270.213 226.755 269.984 226.765  c
269.984 226.359 l
272.984 225.843 l
h
f
newpath
281.109 239.250 m
284.015 237.828 l
284.296 237.828 l
284.296 247.906 l
284.296 248.572 284.325 248.987 284.382 249.148  c
284.440 249.309 284.557 249.434 284.734 249.523  c
284.911 249.612 285.265 249.661 285.796 249.671  c
285.796 250.000 l
281.328 250.000 l
281.328 249.671 l
281.890 249.661 282.252 249.614 282.414 249.531  c
282.575 249.447 282.687 249.333 282.750 249.187  c
282.812 249.041 282.843 248.614 282.843 247.906  c
282.843 241.468 l
282.843 240.604 282.817 240.046 282.765 239.796  c
282.724 239.609 282.648 239.471 282.539 239.382  c
282.429 239.294 282.296 239.250 282.140 239.250  c
281.932 239.250 281.630 239.338 281.234 239.515  c
281.109 239.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
27.2672 181.267 m
27.2672 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
17 223 13 23 rc
newpath
36.0937 235.703 m
20.9062 235.703 l
20.9062 234.500 l
36.0937 234.500 l
36.0937 235.703 l
h
f
Q
newpath
35.0781 241.890 m
35.0781 238.953 l
36.1875 238.953 l
36.2031 239.203 l
36.2343 239.984 l
36.2343 240.463 36.5182 240.875 37.0859 241.218  c
37.6536 241.562 38.3489 241.734 39.1718 241.734  c
40.1406 241.734 40.9244 241.346 41.5234 240.570  c
42.1224 239.794 42.4218 238.770 42.4218 237.500  c
42.4218 236.239 42.0286 235.252 41.2421 234.539  c
40.4557 233.825 39.3645 233.468 37.9687 233.468  c
36.6093 233.468 l
36.6093 232.796 l
37.3437 232.796 l
40.4791 232.796 42.0468 231.531 42.0468 229.000  c
42.0468 226.760 41.0572 225.640 39.0781 225.640  c
38.2135 225.640 37.4583 225.828 36.8125 226.203  c
36.5729 226.338 36.4114 226.927 36.3281 227.968  c
36.3125 228.140 l
35.2031 228.140 l
35.2031 225.609 l
36.4010 225.171 37.7552 224.953 39.2656 224.953  c
40.8072 224.953 42.0234 225.294 42.9140 225.976  c
43.8046 226.658 44.2500 227.593 44.2500 228.781  c
44.2500 230.760 43.0885 232.171 40.7656 233.015  c
42.1927 233.380 43.2135 233.903 43.8281 234.585  c
44.4427 235.268 44.7500 236.213 44.7500 237.421  c
44.7500 238.963 44.2526 240.182 43.2578 241.078  c
42.2630 241.974 40.9114 242.421 39.2031 242.421  c
37.6197 242.421 36.2447 242.244 35.0781 241.890  c
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
83.0115 181.267 m
83.0115 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
73 223 13 23 rc
newpath
92.0937 235.703 m
76.9062 235.703 l
76.9062 234.500 l
92.0937 234.500 l
92.0937 235.703 l
h
f
Q
newpath
90.7968 242.000 m
90.7968 240.890 l
91.4322 239.036 92.4322 237.468 93.7968 236.187  c
94.9843 235.093 l
96.3593 233.802 97.2760 232.778 97.7343 232.023  c
98.1927 231.268 98.4218 230.395 98.4218 229.406  c
98.4218 228.281 98.1432 227.377 97.5859 226.695  c
97.0286 226.013 96.2916 225.671 95.3750 225.671  c
94.3541 225.671 93.4947 225.942 92.7968 226.484  c
92.5260 226.703 92.3593 227.447 92.2968 228.718  c
92.2812 229.000 l
91.1718 229.000 l
91.1718 225.968 l
92.7760 225.291 94.2604 224.953 95.6250 224.953  c
97.1354 224.953 98.3697 225.375 99.3281 226.218  c
100.286 227.062 100.765 228.135 100.765 229.437  c
100.765 231.177 99.6822 232.796 97.5156 234.296  c
96.1718 235.234 l
94.0052 236.713 92.8177 238.322 92.6093 240.062  c
100.703 240.062 l
100.703 242.000 l
90.7968 242.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
138.755 181.267 m
138.755 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
128 223 13 23 rc
newpath
147.093 235.703 m
131.906 235.703 l
131.906 234.500 l
147.093 234.500 l
147.093 235.703 l
h
f
Q
newpath
152.109 225.234 m
152.109 239.093 l
152.171 240.203 l
152.203 240.651 152.333 240.945 152.562 241.085  c
152.791 241.226 153.265 241.296 153.984 241.296  c
155.296 241.296 l
155.296 242.000 l
146.703 242.000 l
146.703 241.296 l
148.015 241.296 l
148.734 241.296 149.208 241.226 149.437 241.085  c
149.666 240.945 149.796 240.651 149.828 240.203  c
149.890 239.093 l
149.890 228.781 l
149.828 227.640 l
149.828 227.109 149.671 226.843 149.359 226.843  c
149.130 226.843 148.614 226.921 147.812 227.078  c
146.703 227.281 l
146.703 226.578 l
152.109 225.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 181.267 m
194.500 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
189.906 240.421 m
188.187 240.421 186.802 239.625 185.750 238.031  c
184.697 236.437 184.171 234.338 184.171 231.734  c
184.171 229.057 184.697 226.927 185.750 225.343  c
186.802 223.760 188.218 222.968 190.000 222.968  c
191.760 222.968 193.169 223.760 194.226 225.343  c
195.283 226.927 195.812 229.046 195.812 231.703  c
195.812 234.380 195.283 236.502 194.226 238.070  c
193.169 239.638 191.729 240.421 189.906 240.421  c
h
189.937 239.718 m
192.291 239.833 193.468 237.119 193.468 231.578  c
193.468 226.286 192.312 223.640 190.000 223.640  c
187.687 223.640 186.531 226.317 186.531 231.671  c
186.531 236.932 187.666 239.614 189.937 239.718  c
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
250.244 181.267 m
250.244 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
256.109 225.234 m
256.109 239.093 l
256.171 240.203 l
256.203 240.651 256.333 240.945 256.562 241.085  c
256.791 241.226 257.265 241.296 257.984 241.296  c
259.296 241.296 l
259.296 242.000 l
250.703 242.000 l
250.703 241.296 l
252.015 241.296 l
252.734 241.296 253.208 241.226 253.437 241.085  c
253.666 240.945 253.796 240.651 253.828 240.203  c
253.890 239.093 l
253.890 228.781 l
253.828 227.640 l
253.828 227.109 253.671 226.843 253.359 226.843  c
253.130 226.843 252.614 226.921 251.812 227.078  c
250.703 227.281 l
250.703 226.578 l
256.109 225.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
305.988 181.267 m
305.988 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
304.796 242.000 m
304.796 240.890 l
305.432 239.036 306.432 237.468 307.796 236.187  c
308.984 235.093 l
310.359 233.802 311.276 232.778 311.734 232.023  c
312.192 231.268 312.421 230.395 312.421 229.406  c
312.421 228.281 312.143 227.377 311.585 226.695  c
311.028 226.013 310.291 225.671 309.375 225.671  c
308.354 225.671 307.494 225.942 306.796 226.484  c
306.526 226.703 306.359 227.447 306.296 228.718  c
306.281 229.000 l
305.171 229.000 l
305.171 225.968 l
306.776 225.291 308.260 224.953 309.625 224.953  c
311.135 224.953 312.369 225.375 313.328 226.218  c
314.286 227.062 314.765 228.135 314.765 229.437  c
314.765 231.177 313.682 232.796 311.515 234.296  c
310.171 235.234 l
308.005 236.713 306.817 238.322 306.609 240.062  c
314.703 240.062 l
314.703 242.000 l
304.796 242.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
361.732 181.267 m
361.732 185.267 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
361.078 241.890 m
361.078 238.953 l
362.187 238.953 l
362.203 239.203 l
362.234 239.984 l
362.234 240.463 362.518 240.875 363.085 241.218  c
363.653 241.562 364.349 241.734 365.171 241.734  c
366.140 241.734 366.924 241.346 367.523 240.570  c
368.122 239.794 368.421 238.770 368.421 237.500  c
368.421 236.239 368.028 235.252 367.242 234.539  c
366.455 233.825 365.364 233.468 363.968 233.468  c
362.609 233.468 l
362.609 232.796 l
363.343 232.796 l
366.479 232.796 368.046 231.531 368.046 229.000  c
368.046 226.760 367.057 225.640 365.078 225.640  c
364.213 225.640 363.458 225.828 362.812 226.203  c
362.572 226.338 362.411 226.927 362.328 227.968  c
362.312 228.140 l
361.203 228.140 l
361.203 225.609 l
362.401 225.171 363.755 224.953 365.265 224.953  c
366.807 224.953 368.023 225.294 368.914 225.976  c
369.804 226.658 370.250 227.593 370.250 228.781  c
370.250 230.760 369.088 232.171 366.765 233.015  c
368.192 233.380 369.213 233.903 369.828 234.585  c
370.442 235.268 370.750 236.213 370.750 237.421  c
370.750 238.963 370.252 240.182 369.257 241.078  c
368.263 241.974 366.911 242.421 365.203 242.421  c
363.619 242.421 362.244 242.244 361.078 241.890  c
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
194.500 348.500 m
194.500 14.0345 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
127 77 27 40 rc
newpath
134.984 88.8437 m
135.349 89.2291 135.625 89.6145 135.812 90.0000  c
135.947 90.2708 136.171 90.9791 136.484 92.1250  c
137.468 90.6406 l
137.729 90.2864 138.046 89.9453 138.421 89.6171  c
138.796 89.2890 139.125 89.0677 139.406 88.9531  c
139.593 88.8802 139.791 88.8437 140.000 88.8437  c
140.322 88.8437 140.580 88.9296 140.773 89.1015  c
140.966 89.2734 141.062 89.4791 141.062 89.7187  c
141.062 90.0104 141.005 90.2083 140.890 90.3125  c
140.682 90.5000 140.442 90.5937 140.171 90.5937  c
140.015 90.5937 139.849 90.5572 139.671 90.4843  c
139.317 90.3697 139.083 90.3125 138.968 90.3125  c
138.781 90.3125 138.567 90.4166 138.328 90.6250  c
137.859 91.0104 137.302 91.7604 136.656 92.8750  c
137.578 96.7500 l
137.724 97.3333 137.846 97.6849 137.945 97.8046  c
138.044 97.9244 138.140 97.9843 138.234 97.9843  c
138.390 97.9843 138.572 97.8958 138.781 97.7187  c
139.197 97.3750 139.552 96.9270 139.843 96.3750  c
140.234 96.5781 l
139.765 97.4635 139.166 98.1979 138.437 98.7812  c
138.020 99.1041 137.671 99.2656 137.390 99.2656  c
136.974 99.2656 136.640 99.0312 136.390 98.5625  c
136.234 98.2708 135.906 97.0104 135.406 94.7812  c
134.239 96.8125 133.307 98.1197 132.609 98.7031  c
132.151 99.0781 131.708 99.2656 131.281 99.2656  c
130.979 99.2656 130.703 99.1562 130.453 98.9375  c
130.276 98.7812 130.187 98.5625 130.187 98.2812  c
130.187 98.0312 130.270 97.8255 130.437 97.6640  c
130.604 97.5026 130.807 97.4218 131.046 97.4218  c
131.286 97.4218 131.541 97.5416 131.812 97.7812  c
132.000 97.9479 132.151 98.0312 132.265 98.0312  c
132.349 98.0312 132.463 97.9739 132.609 97.8593  c
132.963 97.5677 133.442 96.9505 134.046 96.0078  c
134.651 95.0651 135.046 94.3854 135.234 93.9687  c
134.765 92.1458 134.515 91.1822 134.484 91.0781  c
134.307 90.5989 134.080 90.2578 133.804 90.0546  c
133.528 89.8515 133.119 89.7500 132.578 89.7500  c
132.411 89.7500 132.213 89.7552 131.984 89.7656  c
131.984 89.3593 l
134.984 88.8437 l
h
f
newpath
149.250 110.703 m
148.421 113.000 l
141.390 113.000 l
141.390 112.671 l
143.453 110.786 144.906 109.247 145.750 108.054  c
146.593 106.862 147.015 105.765 147.015 104.765  c
147.015 104.015 146.783 103.398 146.320 102.914  c
145.856 102.429 145.307 102.187 144.671 102.187  c
144.078 102.187 143.549 102.356 143.085 102.695  c
142.622 103.033 142.281 103.536 142.062 104.203  c
141.734 104.203 l
141.880 103.119 142.255 102.286 142.859 101.703  c
143.463 101.119 144.218 100.828 145.125 100.828  c
146.093 100.828 146.903 101.140 147.554 101.765  c
148.205 102.390 148.531 103.125 148.531 103.968  c
148.531 104.572 148.390 105.177 148.109 105.781  c
147.671 106.729 146.968 107.734 146.000 108.796  c
144.531 110.390 143.619 111.349 143.265 111.671  c
146.375 111.671 l
147.000 111.671 147.440 111.648 147.695 111.601  c
147.950 111.554 148.182 111.458 148.390 111.312  c
148.599 111.166 148.776 110.963 148.921 110.703  c
149.250 110.703 l
h
f
Q
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
194.500 348.500 m
190.500 348.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
162 371 13 23 rc
newpath
181.093 383.703 m
165.906 383.703 l
165.906 382.500 l
181.093 382.500 l
181.093 383.703 l
h
f
Q
newpath
180.078 389.890 m
180.078 386.953 l
181.187 386.953 l
181.203 387.203 l
181.234 387.984 l
181.234 388.463 181.518 388.875 182.085 389.218  c
182.653 389.562 183.349 389.734 184.171 389.734  c
185.140 389.734 185.924 389.346 186.523 388.570  c
187.122 387.794 187.421 386.770 187.421 385.500  c
187.421 384.239 187.028 383.252 186.242 382.539  c
185.455 381.825 184.364 381.468 182.968 381.468  c
181.609 381.468 l
181.609 380.796 l
182.343 380.796 l
185.479 380.796 187.046 379.531 187.046 377.000  c
187.046 374.760 186.057 373.640 184.078 373.640  c
183.213 373.640 182.458 373.828 181.812 374.203  c
181.572 374.338 181.411 374.927 181.328 375.968  c
181.312 376.140 l
180.203 376.140 l
180.203 373.609 l
181.401 373.171 182.755 372.953 184.265 372.953  c
185.807 372.953 187.023 373.294 187.914 373.976  c
188.804 374.658 189.250 375.593 189.250 376.781  c
189.250 378.760 188.088 380.171 185.765 381.015  c
187.192 381.380 188.213 381.903 188.828 382.585  c
189.442 383.268 189.750 384.213 189.750 385.421  c
189.750 386.963 189.252 388.182 188.257 389.078  c
187.263 389.974 185.911 390.421 184.203 390.421  c
182.619 390.421 181.244 390.244 180.078 389.890  c
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 292.755 m
190.500 292.755 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
162 315 13 23 rc
newpath
181.093 327.703 m
165.906 327.703 l
165.906 326.500 l
181.093 326.500 l
181.093 327.703 l
h
f
Q
newpath
179.796 334.000 m
179.796 332.890 l
180.432 331.036 181.432 329.468 182.796 328.187  c
183.984 327.093 l
185.359 325.802 186.276 324.778 186.734 324.023  c
187.192 323.268 187.421 322.395 187.421 321.406  c
187.421 320.281 187.143 319.377 186.585 318.695  c
186.028 318.013 185.291 317.671 184.375 317.671  c
183.354 317.671 182.494 317.942 181.796 318.484  c
181.526 318.703 181.359 319.447 181.296 320.718  c
181.281 321.000 l
180.171 321.000 l
180.171 317.968 l
181.776 317.291 183.260 316.953 184.625 316.953  c
186.135 316.953 187.369 317.375 188.328 318.218  c
189.286 319.062 189.765 320.135 189.765 321.437  c
189.765 323.177 188.682 324.796 186.515 326.296  c
185.171 327.234 l
183.005 328.713 181.817 330.322 181.609 332.062  c
189.703 332.062 l
189.703 334.000 l
179.796 334.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 237.011 m
190.500 237.011 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
162 260 13 23 rc
newpath
181.093 272.703 m
165.906 272.703 l
165.906 271.500 l
181.093 271.500 l
181.093 272.703 l
h
f
Q
newpath
186.109 262.234 m
186.109 276.093 l
186.171 277.203 l
186.203 277.651 186.333 277.945 186.562 278.085  c
186.791 278.226 187.265 278.296 187.984 278.296  c
189.296 278.296 l
189.296 279.000 l
180.703 279.000 l
180.703 278.296 l
182.015 278.296 l
182.734 278.296 183.208 278.226 183.437 278.085  c
183.666 277.945 183.796 277.651 183.828 277.203  c
183.890 276.093 l
183.890 265.781 l
183.828 264.640 l
183.828 264.109 183.671 263.843 183.359 263.843  c
183.130 263.843 182.614 263.921 181.812 264.078  c
180.703 264.281 l
180.703 263.578 l
186.109 262.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 181.267 m
190.500 181.267 l
S
Q
q
0 w
newpath
194.500 125.523 m
190.500 125.523 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
186.109 150.234 m
186.109 164.093 l
186.171 165.203 l
186.203 165.651 186.333 165.945 186.562 166.085  c
186.791 166.226 187.265 166.296 187.984 166.296  c
189.296 166.296 l
189.296 167.000 l
180.703 167.000 l
180.703 166.296 l
182.015 166.296 l
182.734 166.296 183.208 166.226 183.437 166.085  c
183.666 165.945 183.796 165.651 183.828 165.203  c
183.890 164.093 l
183.890 153.781 l
183.828 152.640 l
183.828 152.109 183.671 151.843 183.359 151.843  c
183.130 151.843 182.614 151.921 181.812 152.078  c
180.703 152.281 l
180.703 151.578 l
186.109 150.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 69.7788 m
190.500 69.7788 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
179.796 111.000 m
179.796 109.890 l
180.432 108.036 181.432 106.468 182.796 105.187  c
183.984 104.093 l
185.359 102.802 186.276 101.778 186.734 101.023  c
187.192 100.268 187.421 99.3958 187.421 98.4062  c
187.421 97.2812 187.143 96.3776 186.585 95.6953  c
186.028 95.0130 185.291 94.6718 184.375 94.6718  c
183.354 94.6718 182.494 94.9427 181.796 95.4843  c
181.526 95.7031 181.359 96.4479 181.296 97.7187  c
181.281 98.0000 l
180.171 98.0000 l
180.171 94.9687 l
181.776 94.2916 183.260 93.9531 184.625 93.9531  c
186.135 93.9531 187.369 94.3750 188.328 95.2187  c
189.286 96.0625 189.765 97.1354 189.765 98.4375  c
189.765 100.177 188.682 101.796 186.515 103.296  c
185.171 104.234 l
183.005 105.713 181.817 107.322 181.609 109.062  c
189.703 109.062 l
189.703 111.000 l
179.796 111.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 14.0345 m
190.500 14.0345 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
180.078 55.8906 m
180.078 52.9531 l
181.187 52.9531 l
181.203 53.2031 l
181.234 53.9843 l
181.234 54.4635 181.518 54.8750 182.085 55.2187  c
182.653 55.5625 183.349 55.7343 184.171 55.7343  c
185.140 55.7343 185.924 55.3463 186.523 54.5703  c
187.122 53.7942 187.421 52.7708 187.421 51.5000  c
187.421 50.2395 187.028 49.2526 186.242 48.5390  c
185.455 47.8255 184.364 47.4687 182.968 47.4687  c
181.609 47.4687 l
181.609 46.7968 l
182.343 46.7968 l
185.479 46.7968 187.046 45.5312 187.046 43.0000  c
187.046 40.7604 186.057 39.6406 184.078 39.6406  c
183.213 39.6406 182.458 39.8281 181.812 40.2031  c
181.572 40.3385 181.411 40.9270 181.328 41.9687  c
181.312 42.1406 l
180.203 42.1406 l
180.203 39.6093 l
181.401 39.1718 182.755 38.9531 184.265 38.9531  c
185.807 38.9531 187.023 39.2942 187.914 39.9765  c
188.804 40.6588 189.250 41.5937 189.250 42.7812  c
189.250 44.7604 188.088 46.1718 185.765 47.0156  c
187.192 47.3802 188.213 47.9036 188.828 48.5859  c
189.442 49.2682 189.750 50.2135 189.750 51.4218  c
189.750 52.9635 189.252 54.1822 188.257 55.0781  c
187.263 55.9739 185.911 56.4218 184.203 56.4218  c
182.619 56.4218 181.244 56.2447 180.078 55.8906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
5 5 391 28 rc
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 392 27 rc
newpath
62.2656 23.0000 m
68.7343 6.37500 l
72.1875 6.37500 l
78.6562 23.0000 l
75.1093 23.0000 l
73.3750 18.5625 l
66.5000 18.5625 l
64.7812 23.0000 l
62.2656 23.0000 l
h
67.3593 16.3437 m
72.5156 16.3437 l
69.9375 9.71875 l
67.3593 16.3437 l
h
87.4375 22.9375 m
86.6458 23.1666 86.0208 23.2812 85.5625 23.2812  c
82.6770 23.2812 81.2343 21.9322 81.2343 19.2343  c
81.2343 12.7500 l
79.8593 12.7500 l
79.8593 10.6718 l
81.2343 10.6718 l
81.2343 8.59375 l
84.5625 8.20312 l
84.5625 10.6718 l
87.2031 10.6718 l
87.2031 12.7500 l
84.5625 12.7500 l
84.5625 18.7968 l
84.5625 20.3072 85.1770 21.0625 86.4062 21.0625  c
86.6979 21.0625 87.0416 21.0104 87.4375 20.9062  c
87.4375 22.9375 l
h
96.4375 22.9375 m
95.6458 23.1666 95.0208 23.2812 94.5625 23.2812  c
91.6770 23.2812 90.2343 21.9322 90.2343 19.2343  c
90.2343 12.7500 l
88.8593 12.7500 l
88.8593 10.6718 l
90.2343 10.6718 l
90.2343 8.59375 l
93.5625 8.20312 l
93.5625 10.6718 l
96.2031 10.6718 l
96.2031 12.7500 l
93.5625 12.7500 l
93.5625 18.7968 l
93.5625 20.3072 94.1770 21.0625 95.4062 21.0625  c
95.6979 21.0625 96.0416 21.0104 96.4375 20.9062  c
96.4375 22.9375 l
h
99.0781 23.0000 m
99.0781 10.6718 l
102.406 10.6718 l
102.406 13.0000 l
103.260 11.2604 104.567 10.3906 106.328 10.3906  c
106.536 10.3906 106.744 10.4114 106.953 10.4531  c
106.953 13.4218 l
106.484 13.2447 106.046 13.1562 105.640 13.1562  c
104.317 13.1562 103.239 13.8281 102.406 15.1718  c
102.406 23.0000 l
99.0781 23.0000 l
h
115.125 21.6718 m
114.010 22.7447 112.822 23.2812 111.562 23.2812  c
110.479 23.2812 109.601 22.9505 108.929 22.2890  c
108.257 21.6276 107.921 20.7760 107.921 19.7343  c
107.921 18.3697 108.466 17.3177 109.554 16.5781  c
110.643 15.8385 112.203 15.4687 114.234 15.4687  c
115.125 15.4687 l
115.125 14.3593 l
115.125 13.0781 114.395 12.4375 112.937 12.4375  c
111.635 12.4375 110.322 12.8020 109.000 13.5312  c
109.000 11.2343 l
110.500 10.6718 111.989 10.3906 113.468 10.3906  c
116.697 10.3906 118.312 11.6718 118.312 14.2343  c
118.312 19.7031 l
118.312 20.6614 118.619 21.1406 119.234 21.1406  c
119.349 21.1406 119.494 21.1302 119.671 21.1093  c
119.765 22.9687 l
119.057 23.1770 118.432 23.2812 117.890 23.2812  c
116.526 23.2812 115.651 22.7447 115.265 21.6718  c
115.125 21.6718 l
h
115.125 19.8906 m
115.125 17.3906 l
114.328 17.3906 l
112.182 17.3906 111.109 18.0625 111.109 19.4062  c
111.109 19.8645 111.265 20.2474 111.578 20.5546  c
111.890 20.8619 112.276 21.0156 112.734 21.0156  c
113.505 21.0156 114.302 20.6406 115.125 19.8906  c
h
132.171 22.7343 m
130.796 23.0989 129.520 23.2812 128.343 23.2812  c
126.375 23.2812 124.820 22.7031 123.679 21.5468  c
122.539 20.3906 121.968 18.8177 121.968 16.8281  c
121.968 14.8072 122.557 13.2291 123.734 12.0937  c
124.911 10.9583 126.536 10.3906 128.609 10.3906  c
129.609 10.3906 130.765 10.5520 132.078 10.8750  c
132.078 13.2812 l
130.713 12.8333 129.625 12.6093 128.812 12.6093  c
127.812 12.6093 127.010 12.9921 126.406 13.7578  c
125.802 14.5234 125.500 15.5364 125.500 16.7968  c
125.500 18.0989 125.825 19.1380 126.476 19.9140  c
127.127 20.6901 128.000 21.0781 129.093 21.0781  c
130.093 21.0781 131.119 20.8593 132.171 20.4218  c
132.171 22.7343 l
h
141.437 22.9375 m
140.645 23.1666 140.020 23.2812 139.562 23.2812  c
136.677 23.2812 135.234 21.9322 135.234 19.2343  c
135.234 12.7500 l
133.859 12.7500 l
133.859 10.6718 l
135.234 10.6718 l
135.234 8.59375 l
138.562 8.20312 l
138.562 10.6718 l
141.203 10.6718 l
141.203 12.7500 l
138.562 12.7500 l
138.562 18.7968 l
138.562 20.3072 139.177 21.0625 140.406 21.0625  c
140.697 21.0625 141.041 21.0104 141.437 20.9062  c
141.437 22.9375 l
h
144.078 23.0000 m
144.078 10.6718 l
147.406 10.6718 l
147.406 23.0000 l
144.078 23.0000 l
h
144.078 8.59375 m
144.078 5.81250 l
147.406 5.81250 l
147.406 8.59375 l
144.078 8.59375 l
h
154.125 23.0000 m
149.421 10.6718 l
152.921 10.6718 l
156.375 19.5625 l
159.796 10.6718 l
162.203 10.6718 l
157.453 23.0000 l
154.125 23.0000 l
h
175.125 22.5781 m
173.541 23.0468 172.041 23.2812 170.625 23.2812  c
168.562 23.2812 166.937 22.6979 165.750 21.5312  c
164.562 20.3645 163.968 18.7708 163.968 16.7500  c
163.968 14.8333 164.513 13.2942 165.601 12.1328  c
166.690 10.9713 168.130 10.3906 169.921 10.3906  c
171.724 10.3906 173.041 10.9583 173.875 12.0937  c
174.708 13.2291 175.125 15.0312 175.125 17.5000  c
167.468 17.5000 l
167.697 19.8437 168.989 21.0156 171.343 21.0156  c
172.458 21.0156 173.718 20.7604 175.125 20.2500  c
175.125 22.5781 l
h
167.421 15.6250 m
171.843 15.6250 l
171.843 13.5208 171.166 12.4687 169.812 12.4687  c
168.437 12.4687 167.640 13.5208 167.421 15.6250  c
h
186.078 23.0000 m
186.078 6.37500 l
191.875 6.37500 l
193.895 6.37500 195.338 6.71354 196.203 7.39062  c
197.067 8.06770 197.500 9.20312 197.500 10.7968  c
197.500 12.5885 196.921 13.9843 195.765 14.9843  c
194.609 15.9843 192.989 16.4843 190.906 16.4843  c
189.468 16.4843 l
189.468 23.0000 l
186.078 23.0000 l
h
189.468 14.2031 m
190.140 14.2031 l
191.328 14.2031 192.263 13.9296 192.945 13.3828  c
193.627 12.8359 193.968 12.0885 193.968 11.1406  c
193.968 9.48437 192.916 8.65625 190.812 8.65625  c
189.468 8.65625 l
189.468 14.2031 l
h
200.078 23.0000 m
200.078 10.6718 l
203.406 10.6718 l
203.406 13.0000 l
204.260 11.2604 205.567 10.3906 207.328 10.3906  c
207.536 10.3906 207.744 10.4114 207.953 10.4531  c
207.953 13.4218 l
207.484 13.2447 207.046 13.1562 206.640 13.1562  c
205.317 13.1562 204.239 13.8281 203.406 15.1718  c
203.406 23.0000 l
200.078 23.0000 l
h
215.250 23.2812 m
213.333 23.2812 211.807 22.6979 210.671 21.5312  c
209.536 20.3645 208.968 18.7968 208.968 16.8281  c
208.968 14.8385 209.539 13.2682 210.679 12.1171  c
211.820 10.9661 213.369 10.3906 215.328 10.3906  c
217.296 10.3906 218.854 10.9661 220.000 12.1171  c
221.145 13.2682 221.718 14.8333 221.718 16.8125  c
221.718 18.8333 221.145 20.4166 220.000 21.5625  c
218.854 22.7083 217.270 23.2812 215.250 23.2812  c
h
215.312 21.2031 m
217.218 21.2031 218.171 19.7395 218.171 16.8125  c
218.171 15.4687 217.919 14.4088 217.414 13.6328  c
216.908 12.8567 216.213 12.4687 215.328 12.4687  c
214.453 12.4687 213.763 12.8567 213.257 13.6328  c
212.752 14.4088 212.500 15.4739 212.500 16.8281  c
212.500 18.1718 212.752 19.2369 213.257 20.0234  c
213.763 20.8099 214.447 21.2031 215.312 21.2031  c
h
225.078 27.4375 m
225.078 10.6718 l
228.406 10.6718 l
228.406 13.0000 l
229.260 11.2604 230.604 10.3906 232.437 10.3906  c
233.916 10.3906 235.080 10.9322 235.929 12.0156  c
236.778 13.0989 237.203 14.5937 237.203 16.5000  c
237.203 18.5625 236.724 20.2083 235.765 21.4375  c
234.807 22.6666 233.526 23.2812 231.921 23.2812  c
230.619 23.2812 229.447 22.7708 228.406 21.7500  c
228.406 27.4375 l
225.078 27.4375 l
h
228.406 19.7812 m
229.208 20.6770 230.067 21.1250 230.984 21.1250  c
231.796 21.1250 232.447 20.7291 232.937 19.9375  c
233.427 19.1458 233.671 18.0937 233.671 16.7812  c
233.671 14.2604 232.859 13.0000 231.234 13.0000  c
230.255 13.0000 229.312 13.6302 228.406 14.8906  c
228.406 19.7812 l
h
250.125 22.5781 m
248.541 23.0468 247.041 23.2812 245.625 23.2812  c
243.562 23.2812 241.937 22.6979 240.750 21.5312  c
239.562 20.3645 238.968 18.7708 238.968 16.7500  c
238.968 14.8333 239.513 13.2942 240.601 12.1328  c
241.690 10.9713 243.130 10.3906 244.921 10.3906  c
246.724 10.3906 248.041 10.9583 248.875 12.0937  c
249.708 13.2291 250.125 15.0312 250.125 17.5000  c
242.468 17.5000 l
242.697 19.8437 243.989 21.0156 246.343 21.0156  c
247.458 21.0156 248.718 20.7604 250.125 20.2500  c
250.125 22.5781 l
h
242.421 15.6250 m
246.843 15.6250 l
246.843 13.5208 246.166 12.4687 244.812 12.4687  c
243.437 12.4687 242.640 13.5208 242.421 15.6250  c
h
253.078 23.0000 m
253.078 10.6718 l
256.406 10.6718 l
256.406 13.0000 l
257.260 11.2604 258.567 10.3906 260.328 10.3906  c
260.536 10.3906 260.744 10.4114 260.953 10.4531  c
260.953 13.4218 l
260.484 13.2447 260.046 13.1562 259.640 13.1562  c
258.317 13.1562 257.239 13.8281 256.406 15.1718  c
256.406 23.0000 l
253.078 23.0000 l
h
271.078 23.0000 m
271.078 6.37500 l
274.125 6.37500 l
281.828 17.7343 l
281.828 6.37500 l
284.593 6.37500 l
284.593 23.0000 l
281.500 23.0000 l
273.859 11.6406 l
273.859 23.0000 l
271.078 23.0000 l
h
294.250 23.2812 m
292.333 23.2812 290.807 22.6979 289.671 21.5312  c
288.536 20.3645 287.968 18.7968 287.968 16.8281  c
287.968 14.8385 288.539 13.2682 289.679 12.1171  c
290.820 10.9661 292.369 10.3906 294.328 10.3906  c
296.296 10.3906 297.854 10.9661 299.000 12.1171  c
300.145 13.2682 300.718 14.8333 300.718 16.8125  c
300.718 18.8333 300.145 20.4166 299.000 21.5625  c
297.854 22.7083 296.270 23.2812 294.250 23.2812  c
h
294.312 21.2031 m
296.218 21.2031 297.171 19.7395 297.171 16.8125  c
297.171 15.4687 296.919 14.4088 296.414 13.6328  c
295.908 12.8567 295.213 12.4687 294.328 12.4687  c
293.453 12.4687 292.763 12.8567 292.257 13.6328  c
291.752 14.4088 291.500 15.4739 291.500 16.8281  c
291.500 18.1718 291.752 19.2369 292.257 20.0234  c
292.763 20.8099 293.447 21.2031 294.312 21.2031  c
h
311.843 23.0000 m
311.843 20.6718 l
310.989 22.4114 309.645 23.2812 307.812 23.2812  c
306.322 23.2812 305.156 22.7395 304.312 21.6562  c
303.468 20.5729 303.046 19.0781 303.046 17.1718  c
303.046 15.1093 303.523 13.4635 304.476 12.2343  c
305.429 11.0052 306.713 10.3906 308.328 10.3906  c
309.609 10.3906 310.781 10.9010 311.843 11.9218  c
311.843 5.26562 l
315.171 5.26562 l
315.171 23.0000 l
311.843 23.0000 l
h
311.843 13.8906 m
311.041 12.9947 310.182 12.5468 309.265 12.5468  c
308.453 12.5468 307.802 12.9401 307.312 13.7265  c
306.822 14.5130 306.578 15.5677 306.578 16.8906  c
306.578 19.4114 307.390 20.6718 309.015 20.6718  c
309.994 20.6718 310.937 20.0416 311.843 18.7812  c
311.843 13.8906 l
h
329.125 22.5781 m
327.541 23.0468 326.041 23.2812 324.625 23.2812  c
322.562 23.2812 320.937 22.6979 319.750 21.5312  c
318.562 20.3645 317.968 18.7708 317.968 16.7500  c
317.968 14.8333 318.513 13.2942 319.601 12.1328  c
320.690 10.9713 322.130 10.3906 323.921 10.3906  c
325.724 10.3906 327.041 10.9583 327.875 12.0937  c
328.708 13.2291 329.125 15.0312 329.125 17.5000  c
321.468 17.5000 l
321.697 19.8437 322.989 21.0156 325.343 21.0156  c
326.458 21.0156 327.718 20.7604 329.125 20.2500  c
329.125 22.5781 l
h
321.421 15.6250 m
325.843 15.6250 l
325.843 13.5208 325.166 12.4687 323.812 12.4687  c
322.437 12.4687 321.640 13.5208 321.421 15.6250  c
h
f
Q
cliprestore
newpath
0 0 m
0 28.0000 l
391.000 28.0000 l
391.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
cliprestore
Q
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
