%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, March 17, 2016 6:34:55 PM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
0 0 390 363 rc
1.00000 w
q
0.752941 0.752941 0.752941 RG
newpath
21.2584 354.500 m
21.2584 8.01696 l
S
newpath
107.879 354.500 m
107.879 8.01696 l
S
newpath
194.500 354.500 m
194.500 8.01696 l
S
newpath
281.120 354.500 m
281.120 8.01696 l
S
newpath
367.741 354.500 m
367.741 8.01696 l
S
Q
1.50000 w
1.00000 w
q
0.752941 0.752941 0.752941 RG
newpath
21.2584 354.500 m
367.741 354.500 l
S
newpath
21.2584 267.879 m
367.741 267.879 l
S
newpath
21.2584 181.258 m
367.741 181.258 l
S
newpath
21.2584 94.6377 m
367.741 94.6377 l
S
newpath
21.2584 8.01696 m
367.741 8.01696 l
S
Q
1.50000 w
q
q
3.00000 w
0.800000 0.196078 0.196078 RG
18.2584 4.01697 353.483 353.483 rc
newpath
194.500 224.568 m
202.779 227.116 l
S
newpath
180.489 211.195 m
202.779 227.116 l
175.394 227.753 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
3.00000 w
0 0 1.00000 RG
18.2584 4.01697 353.483 353.483 rc
newpath
194.500 137.948 m
186.221 135.400 l
S
newpath
208.510 151.321 m
186.221 135.400 l
213.605 134.763 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0 0 1.00000 RG
19.2584 5.01697 351.483 351.483 rc
newpath
193.468 181.265 m
193.490 181.275 l
193.513 181.286 l
193.536 181.297 l
193.561 181.309 l
193.587 181.320 l
193.614 181.332 l
193.642 181.344 l
193.671 181.356 l
193.700 181.368 l
193.731 181.381 l
193.763 181.394 l
193.796 181.406 l
193.830 181.419 l
193.865 181.433 l
193.901 181.446 l
193.938 181.460 l
193.976 181.473 l
194.015 181.487 l
194.055 181.502 l
194.096 181.516 l
194.138 181.530 l
194.181 181.545 l
194.225 181.560 l
194.270 181.574 l
194.317 181.589 l
194.364 181.605 l
194.412 181.620 l
194.461 181.635 l
194.512 181.651 l
194.563 181.666 l
194.615 181.682 l
194.669 181.698 l
194.723 181.714 l
194.778 181.730 l
194.835 181.746 l
194.892 181.762 l
194.950 181.779 l
195.009 181.795 l
195.069 181.812 l
195.130 181.828 l
195.192 181.845 l
195.255 181.861 l
195.319 181.878 l
195.383 181.894 l
195.449 181.911 l
195.515 181.927 l
195.582 181.944 l
195.650 181.961 l
195.719 181.977 l
195.788 181.994 l
195.859 182.010 l
195.930 182.027 l
196.001 182.043 l
196.074 182.060 l
196.147 182.076 l
196.220 182.092 l
196.295 182.108 l
196.370 182.124 l
196.445 182.140 l
196.521 182.156 l
196.598 182.171 l
196.675 182.187 l
196.752 182.202 l
196.830 182.217 l
196.908 182.232 l
196.987 182.247 l
197.066 182.262 l
197.145 182.276 l
197.225 182.290 l
197.305 182.304 l
197.385 182.318 l
197.465 182.331 l
197.545 182.344 l
197.626 182.357 l
197.706 182.370 l
197.786 182.382 l
197.867 182.394 l
197.947 182.406 l
198.027 182.417 l
198.107 182.428 l
198.187 182.438 l
198.267 182.449 l
198.346 182.458 l
198.425 182.468 l
198.503 182.477 l
198.581 182.485 l
198.659 182.493 l
198.736 182.501 l
198.813 182.508 l
198.889 182.514 l
198.964 182.520 l
199.038 182.526 l
199.112 182.531 l
199.185 182.536 l
199.257 182.540 l
199.328 182.543 l
199.398 182.546 l
199.466 182.548 l
199.534 182.550 l
199.601 182.551 l
199.666 182.551 l
199.730 182.551 l
199.793 182.550 l
199.854 182.548 l
199.914 182.546 l
199.973 182.543 l
200.029 182.539 l
200.085 182.535 l
200.138 182.530 l
200.190 182.524 l
200.240 182.517 l
200.287 182.510 l
200.333 182.502 l
200.377 182.493 l
200.419 182.483 l
200.459 182.472 l
200.497 182.461 l
200.532 182.448 l
200.565 182.435 l
200.595 182.421 l
200.623 182.406 l
200.649 182.391 l
200.672 182.374 l
200.692 182.357 l
200.710 182.338 l
200.725 182.319 l
200.736 182.298 l
200.746 182.277 l
200.752 182.255 l
200.755 182.232 l
200.755 182.208 l
200.751 182.183 l
200.745 182.157 l
200.735 182.130 l
200.722 182.102 l
200.706 182.073 l
200.686 182.043 l
200.662 182.012 l
200.635 181.980 l
200.605 181.947 l
200.570 181.913 l
200.532 181.878 l
200.490 181.842 l
200.444 181.805 l
200.394 181.767 l
200.341 181.728 l
200.283 181.687 l
200.221 181.646 l
200.155 181.604 l
200.085 181.561 l
200.010 181.517 l
199.931 181.471 l
199.848 181.425 l
199.761 181.378 l
199.669 181.329 l
199.573 181.280 l
199.472 181.230 l
199.366 181.178 l
199.256 181.126 l
199.142 181.073 l
199.023 181.018 l
198.899 180.963 l
198.770 180.907 l
198.636 180.850 l
198.498 180.791 l
198.355 180.732 l
198.207 180.672 l
198.055 180.611 l
197.897 180.549 l
197.734 180.487 l
197.567 180.423 l
197.395 180.358 l
197.217 180.293 l
197.035 180.227 l
196.848 180.160 l
196.656 180.092 l
196.458 180.024 l
196.256 179.954 l
196.049 179.884 l
195.837 179.813 l
195.620 179.742 l
195.398 179.670 l
195.171 179.597 l
194.939 179.523 l
194.702 179.449 l
194.461 179.374 l
194.214 179.299 l
193.963 179.224 l
193.707 179.147 l
193.446 179.071 l
193.180 178.993 l
192.910 178.916 l
192.635 178.838 l
192.355 178.759 l
192.071 178.681 l
191.782 178.602 l
191.489 178.523 l
191.191 178.443 l
190.889 178.364 l
190.583 178.284 l
190.273 178.204 l
189.958 178.124 l
189.640 178.044 l
189.317 177.964 l
188.991 177.884 l
188.660 177.804 l
188.326 177.725 l
187.989 177.645 l
187.647 177.566 l
187.303 177.487 l
186.955 177.408 l
186.604 177.330 l
186.249 177.252 l
185.892 177.174 l
185.532 177.097 l
185.169 177.021 l
184.804 176.945 l
184.436 176.870 l
184.065 176.795 l
183.693 176.722 l
183.318 176.649 l
182.942 176.576 l
182.563 176.505 l
182.183 176.435 l
181.802 176.366 l
181.419 176.298 l
181.036 176.231 l
180.651 176.165 l
180.265 176.100 l
179.879 176.037 l
179.493 175.975 l
179.106 175.914 l
178.719 175.855 l
178.332 175.798 l
177.946 175.742 l
177.560 175.687 l
177.175 175.635 l
176.791 175.584 l
176.409 175.535 l
176.027 175.488 l
175.647 175.443 l
175.269 175.400 l
174.893 175.359 l
174.520 175.320 l
174.149 175.284 l
173.781 175.249 l
173.415 175.217 l
173.053 175.188 l
172.695 175.161 l
172.340 175.136 l
171.990 175.114 l
171.643 175.095 l
171.302 175.078 l
170.965 175.064 l
170.633 175.053 l
170.306 175.045 l
169.985 175.040 l
169.670 175.038 l
169.361 175.039 l
169.059 175.043 l
168.763 175.051 l
168.474 175.061 l
168.193 175.076 l
167.919 175.093 l
167.654 175.114 l
167.396 175.138 l
167.147 175.166 l
166.906 175.198 l
166.675 175.234 l
166.453 175.273 l
166.241 175.316 l
166.038 175.363 l
165.846 175.413 l
165.665 175.468 l
165.495 175.527 l
165.335 175.590 l
165.187 175.657 l
165.051 175.728 l
164.928 175.803 l
164.816 175.883 l
164.718 175.967 l
164.632 176.055 l
164.560 176.148 l
164.501 176.245 l
164.456 176.347 l
164.426 176.453 l
164.410 176.564 l
164.409 176.680 l
164.423 176.800 l
164.453 176.924 l
164.499 177.054 l
164.560 177.188 l
164.638 177.327 l
164.733 177.471 l
164.844 177.619 l
164.973 177.773 l
165.119 177.931 l
165.283 178.094 l
165.465 178.262 l
165.666 178.435 l
165.885 178.613 l
166.123 178.796 l
166.380 178.984 l
166.657 179.177 l
166.953 179.374 l
167.269 179.577 l
167.605 179.784 l
167.961 179.997 l
168.339 180.214 l
168.737 180.437 l
169.156 180.664 l
169.596 180.896 l
170.058 181.133 l
170.541 181.375 l
171.046 181.621 l
171.574 181.873 l
172.123 182.129 l
172.695 182.390 l
173.290 182.656 l
173.907 182.926 l
174.547 183.201 l
175.210 183.480 l
175.897 183.764 l
176.606 184.053 l
177.339 184.346 l
178.095 184.643 l
178.875 184.945 l
179.679 185.251 l
180.506 185.561 l
181.357 185.875 l
182.232 186.193 l
183.131 186.515 l
184.054 186.841 l
185.000 187.170 l
185.971 187.504 l
186.965 187.840 l
187.984 188.181 l
189.026 188.524 l
190.092 188.872 l
191.182 189.222 l
192.295 189.575 l
193.432 189.931 l
194.593 190.290 l
195.777 190.652 l
196.984 191.016 l
198.214 191.383 l
199.468 191.752 l
200.744 192.123 l
202.043 192.496 l
203.364 192.871 l
204.707 193.248 l
206.073 193.626 l
207.460 194.005 l
208.869 194.386 l
210.299 194.768 l
211.749 195.151 l
213.221 195.535 l
214.712 195.919 l
216.224 196.303 l
217.755 196.688 l
219.305 197.072 l
220.874 197.457 l
222.462 197.841 l
224.067 198.224 l
225.690 198.607 l
227.330 198.988 l
228.986 199.368 l
230.659 199.747 l
232.347 200.124 l
234.050 200.499 l
235.768 200.872 l
237.499 201.243 l
239.243 201.611 l
241.001 201.976 l
242.770 202.338 l
244.551 202.697 l
246.342 203.052 l
248.143 203.404 l
249.954 203.751 l
251.773 204.094 l
253.600 204.433 l
255.434 204.766 l
257.274 205.094 l
259.120 205.417 l
260.971 205.735 l
262.825 206.046 l
264.682 206.351 l
266.542 206.650 l
268.402 206.941 l
270.263 207.226 l
272.123 207.504 l
273.982 207.773 l
275.837 208.035 l
277.690 208.289 l
279.537 208.534 l
281.379 208.770 l
283.215 208.997 l
285.043 209.214 l
286.861 209.422 l
288.670 209.620 l
290.468 209.808 l
292.254 209.985 l
294.027 210.151 l
295.785 210.306 l
297.527 210.449 l
299.253 210.580 l
300.961 210.699 l
302.649 210.806 l
304.317 210.900 l
305.963 210.981 l
307.586 211.049 l
309.184 211.102 l
310.757 211.142 l
312.304 211.168 l
313.821 211.179 l
315.310 211.175 l
316.767 211.156 l
318.192 211.121 l
319.583 211.071 l
320.940 211.005 l
322.259 210.922 l
323.541 210.823 l
324.784 210.706 l
325.986 210.573 l
327.146 210.422 l
328.262 210.253 l
329.334 210.066 l
330.358 209.861 l
331.335 209.637 l
332.263 209.394 l
333.140 209.132 l
333.964 208.851 l
334.735 208.550 l
335.450 208.230 l
336.109 207.889 l
336.709 207.528 l
337.250 207.146 l
337.730 206.744 l
338.147 206.320 l
338.500 205.876 l
338.787 205.410 l
339.007 204.922 l
339.159 204.413 l
339.241 203.881 l
339.251 203.328 l
339.188 202.752 l
339.051 202.153 l
338.838 201.532 l
338.548 200.889 l
338.180 200.222 l
337.731 199.532 l
337.201 198.819 l
336.589 198.083 l
335.892 197.323 l
335.109 196.540 l
334.240 195.734 l
333.283 194.903 l
332.236 194.049 l
331.099 193.172 l
329.870 192.271 l
328.547 191.346 l
327.130 190.397 l
325.617 189.424 l
324.008 188.428 l
322.301 187.407 l
320.494 186.364 l
318.588 185.296 l
316.580 184.205 l
314.471 183.090 l
312.258 181.952 l
309.940 180.790 l
307.518 179.606 l
304.990 178.398 l
302.355 177.167 l
299.612 175.914 l
296.760 174.638 l
293.800 173.339 l
290.729 172.018 l
287.548 170.675 l
284.255 169.311 l
280.851 167.924 l
277.334 166.517 l
273.705 165.088 l
269.962 163.639 l
266.105 162.170 l
262.135 160.680 l
258.050 159.171 l
253.850 157.642 l
249.536 156.095 l
245.106 154.529 l
240.562 152.945 l
235.902 151.343 l
231.128 149.723 l
226.238 148.087 l
221.234 146.435 l
216.115 144.767 l
210.882 143.084 l
205.534 141.386 l
200.074 139.673 l
194.500 137.948 l
188.813 136.209 l
183.014 134.458 l
177.105 132.695 l
171.084 130.921 l
164.954 129.136 l
158.715 127.342 l
152.367 125.539 l
145.913 123.728 l
139.353 121.908 l
132.689 120.083 l
125.921 118.251 l
119.050 116.414 l
112.079 114.573 l
105.009 112.728 l
97.8422 110.880 l
90.5785 109.031 l
83.2206 107.181 l
75.7703 105.331 l
68.2294 103.482 l
60.5999 101.634 l
52.8840 99.7905 l
45.0836 97.9501 l
37.2012 96.1145 l
29.2390 94.2849 l
21.1993 92.4622 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
q
2.00000 w
0.800000 0.196078 0.196078 RG
19.2584 5.01697 351.483 351.483 rc
newpath
195.531 181.251 m
195.509 181.241 l
195.487 181.230 l
195.463 181.219 l
195.438 181.207 l
195.412 181.196 l
195.385 181.184 l
195.357 181.172 l
195.328 181.160 l
195.299 181.148 l
195.268 181.135 l
195.236 181.123 l
195.203 181.110 l
195.169 181.097 l
195.134 181.083 l
195.098 181.070 l
195.062 181.056 l
195.024 181.043 l
194.985 181.029 l
194.944 181.015 l
194.903 181.000 l
194.861 180.986 l
194.818 180.971 l
194.774 180.957 l
194.729 180.942 l
194.683 180.927 l
194.635 180.911 l
194.587 180.896 l
194.538 180.881 l
194.487 180.865 l
194.436 180.850 l
194.384 180.834 l
194.330 180.818 l
194.276 180.802 l
194.221 180.786 l
194.165 180.770 l
194.107 180.754 l
194.049 180.737 l
193.990 180.721 l
193.930 180.705 l
193.869 180.688 l
193.807 180.672 l
193.744 180.655 l
193.680 180.638 l
193.616 180.622 l
193.550 180.605 l
193.484 180.589 l
193.417 180.572 l
193.349 180.555 l
193.280 180.539 l
193.211 180.522 l
193.140 180.506 l
193.069 180.489 l
192.998 180.473 l
192.925 180.456 l
192.852 180.440 l
192.779 180.424 l
192.704 180.408 l
192.629 180.392 l
192.554 180.376 l
192.478 180.360 l
192.401 180.345 l
192.324 180.329 l
192.247 180.314 l
192.169 180.299 l
192.091 180.284 l
192.012 180.269 l
191.933 180.254 l
191.854 180.240 l
191.774 180.226 l
191.694 180.212 l
191.614 180.198 l
191.534 180.185 l
191.454 180.172 l
191.374 180.159 l
191.293 180.146 l
191.213 180.134 l
191.132 180.122 l
191.052 180.110 l
190.972 180.099 l
190.892 180.088 l
190.812 180.078 l
190.732 180.068 l
190.653 180.058 l
190.574 180.048 l
190.496 180.040 l
190.418 180.031 l
190.340 180.023 l
190.263 180.015 l
190.186 180.008 l
190.111 180.002 l
190.035 179.996 l
189.961 179.990 l
189.887 179.985 l
189.814 179.980 l
189.743 179.976 l
189.672 179.973 l
189.602 179.970 l
189.533 179.968 l
189.465 179.966 l
189.398 179.965 l
189.333 179.965 l
189.269 179.965 l
189.206 179.966 l
189.145 179.968 l
189.085 179.970 l
189.026 179.973 l
188.970 179.977 l
188.914 179.981 l
188.861 179.986 l
188.809 179.992 l
188.760 179.999 l
188.712 180.006 l
188.666 180.014 l
188.622 180.024 l
188.580 180.033 l
188.540 180.044 l
188.503 180.055 l
188.467 180.068 l
188.434 180.081 l
188.404 180.095 l
188.376 180.110 l
188.350 180.125 l
188.327 180.142 l
188.307 180.160 l
188.289 180.178 l
188.275 180.197 l
188.263 180.218 l
188.254 180.239 l
188.247 180.261 l
188.244 180.284 l
188.244 180.308 l
188.248 180.333 l
188.254 180.359 l
188.264 180.386 l
188.277 180.414 l
188.293 180.443 l
188.313 180.473 l
188.337 180.504 l
188.364 180.536 l
188.395 180.569 l
188.429 180.603 l
188.467 180.638 l
188.509 180.674 l
188.555 180.711 l
188.605 180.749 l
188.659 180.788 l
188.716 180.829 l
188.778 180.870 l
188.844 180.912 l
188.914 180.955 l
188.989 180.999 l
189.068 181.045 l
189.151 181.091 l
189.238 181.138 l
189.330 181.187 l
189.426 181.236 l
189.527 181.286 l
189.633 181.338 l
189.743 181.390 l
189.857 181.443 l
189.977 181.498 l
190.101 181.553 l
190.229 181.609 l
190.363 181.667 l
190.501 181.725 l
190.644 181.784 l
190.792 181.844 l
190.945 181.905 l
191.102 181.967 l
191.265 182.029 l
191.432 182.093 l
191.605 182.158 l
191.782 182.223 l
191.964 182.289 l
192.151 182.356 l
192.344 182.424 l
192.541 182.493 l
192.743 182.562 l
192.950 182.632 l
193.162 182.703 l
193.379 182.774 l
193.601 182.846 l
193.828 182.919 l
194.060 182.993 l
194.297 183.067 l
194.538 183.142 l
194.785 183.217 l
195.036 183.293 l
195.292 183.369 l
195.553 183.446 l
195.819 183.523 l
196.089 183.600 l
196.364 183.678 l
196.644 183.757 l
196.928 183.835 l
197.217 183.914 l
197.510 183.993 l
197.808 184.073 l
198.110 184.152 l
198.416 184.232 l
198.726 184.312 l
199.041 184.392 l
199.359 184.472 l
199.682 184.552 l
200.008 184.632 l
200.339 184.712 l
200.673 184.791 l
201.010 184.871 l
201.352 184.950 l
201.696 185.029 l
202.044 185.108 l
202.395 185.186 l
202.750 185.264 l
203.107 185.342 l
203.467 185.419 l
203.830 185.495 l
204.195 185.571 l
204.563 185.646 l
204.934 185.721 l
205.306 185.795 l
205.681 185.867 l
206.057 185.940 l
206.436 186.011 l
206.816 186.081 l
207.197 186.150 l
207.580 186.219 l
207.963 186.286 l
208.348 186.351 l
208.734 186.416 l
209.120 186.479 l
209.506 186.541 l
209.893 186.602 l
210.280 186.661 l
210.667 186.718 l
211.053 186.774 l
211.439 186.829 l
211.824 186.881 l
212.208 186.932 l
212.591 186.981 l
212.972 187.028 l
213.352 187.073 l
213.730 187.116 l
214.106 187.157 l
214.479 187.196 l
214.850 187.233 l
215.218 187.267 l
215.584 187.299 l
215.946 187.328 l
216.304 187.356 l
216.659 187.380 l
217.009 187.402 l
217.356 187.421 l
217.698 187.438 l
218.035 187.452 l
218.366 187.463 l
218.693 187.471 l
219.014 187.476 l
219.329 187.478 l
219.638 187.477 l
219.940 187.473 l
220.236 187.465 l
220.525 187.455 l
220.806 187.441 l
221.080 187.423 l
221.346 187.402 l
221.603 187.378 l
221.852 187.350 l
222.093 187.318 l
222.324 187.282 l
222.546 187.243 l
222.758 187.200 l
222.961 187.154 l
223.153 187.103 l
223.334 187.048 l
223.505 186.989 l
223.664 186.926 l
223.812 186.859 l
223.948 186.788 l
224.071 186.713 l
224.183 186.633 l
224.282 186.549 l
224.367 186.461 l
224.439 186.368 l
224.498 186.271 l
224.543 186.169 l
224.573 186.063 l
224.589 185.952 l
224.590 185.837 l
224.576 185.716 l
224.546 185.592 l
224.500 185.462 l
224.439 185.328 l
224.361 185.189 l
224.266 185.045 l
224.155 184.897 l
224.026 184.743 l
223.880 184.585 l
223.716 184.422 l
223.534 184.254 l
223.333 184.081 l
223.114 183.903 l
222.876 183.720 l
222.619 183.532 l
222.343 183.339 l
222.046 183.142 l
221.730 182.939 l
221.394 182.732 l
221.038 182.519 l
220.661 182.302 l
220.263 182.080 l
219.844 181.852 l
219.403 181.620 l
218.941 181.383 l
218.458 181.141 l
217.953 180.895 l
217.425 180.643 l
216.876 180.387 l
216.304 180.126 l
215.709 179.860 l
215.092 179.590 l
214.452 179.315 l
213.789 179.036 l
213.102 178.752 l
212.393 178.463 l
211.660 178.170 l
210.904 177.873 l
210.124 177.571 l
209.320 177.265 l
208.493 176.955 l
207.642 176.641 l
206.767 176.323 l
205.868 176.001 l
204.945 175.675 l
203.999 175.346 l
203.028 175.013 l
202.034 174.676 l
201.015 174.335 l
199.973 173.992 l
198.907 173.645 l
197.817 173.294 l
196.704 172.941 l
195.567 172.585 l
194.406 172.226 l
193.222 171.864 l
192.015 171.500 l
190.785 171.133 l
189.531 170.764 l
188.255 170.393 l
186.956 170.020 l
185.635 169.645 l
184.292 169.269 l
182.926 168.890 l
181.539 168.511 l
180.130 168.130 l
178.701 167.748 l
177.250 167.365 l
175.778 166.981 l
174.287 166.597 l
172.775 166.213 l
171.244 165.828 l
169.694 165.444 l
168.125 165.059 l
166.537 164.675 l
164.932 164.292 l
163.309 163.909 l
161.669 163.528 l
160.013 163.148 l
158.340 162.769 l
156.652 162.392 l
154.949 162.017 l
153.232 161.644 l
151.500 161.273 l
149.756 160.905 l
147.998 160.540 l
146.229 160.178 l
144.448 159.819 l
142.657 159.464 l
140.856 159.112 l
139.045 158.765 l
137.226 158.422 l
135.399 158.084 l
133.565 157.750 l
131.725 157.422 l
129.879 157.099 l
128.028 156.781 l
126.174 156.470 l
124.317 156.165 l
122.457 155.866 l
120.597 155.575 l
118.736 155.290 l
116.876 155.013 l
115.018 154.743 l
113.162 154.481 l
111.309 154.228 l
109.462 153.983 l
107.620 153.746 l
105.784 153.519 l
103.957 153.302 l
102.138 153.094 l
100.329 152.896 l
98.5311 152.708 l
96.7452 152.531 l
94.9727 152.365 l
93.2146 152.211 l
91.4721 152.067 l
89.7465 151.936 l
88.0389 151.817 l
86.3506 151.710 l
84.6828 151.616 l
83.0368 151.535 l
81.4138 151.467 l
79.8151 151.414 l
78.2421 151.374 l
76.6960 151.348 l
75.1781 151.337 l
73.6899 151.341 l
72.2325 151.360 l
70.8075 151.395 l
69.4162 151.445 l
68.0599 151.511 l
66.7401 151.594 l
65.4582 151.694 l
64.2155 151.810 l
63.0135 151.943 l
61.8536 152.095 l
60.7373 152.263 l
59.6660 152.450 l
58.6411 152.656 l
57.6642 152.879 l
56.7366 153.122 l
55.8599 153.384 l
55.0354 153.665 l
54.2647 153.966 l
53.5493 154.286 l
52.8906 154.627 l
52.2901 154.988 l
51.7493 155.370 l
51.2697 155.772 l
50.8527 156.196 l
50.4999 156.640 l
50.2126 157.106 l
49.9924 157.594 l
49.8407 158.103 l
49.7590 158.635 l
49.7488 159.188 l
49.8114 159.764 l
49.9484 160.363 l
50.1612 160.984 l
50.4511 161.628 l
50.8196 162.294 l
51.2682 162.984 l
51.7981 163.697 l
52.4109 164.433 l
53.1077 165.193 l
53.8901 165.976 l
54.7592 166.783 l
55.7165 167.613 l
56.7632 168.467 l
57.9006 169.344 l
59.1300 170.245 l
60.4526 171.171 l
61.8695 172.119 l
63.3821 173.092 l
64.9915 174.088 l
66.6988 175.109 l
68.5051 176.153 l
70.4115 177.220 l
72.4191 178.311 l
74.5289 179.426 l
76.7419 180.564 l
79.0591 181.726 l
81.4814 182.910 l
84.0097 184.118 l
86.6449 185.349 l
89.3878 186.602 l
92.2392 187.879 l
95.1998 189.177 l
98.2704 190.498 l
101.451 191.841 l
104.744 193.206 l
108.148 194.592 l
111.665 195.999 l
115.294 197.428 l
119.037 198.877 l
122.894 200.346 l
126.864 201.836 l
130.949 203.345 l
135.149 204.874 l
139.464 206.421 l
143.893 207.987 l
148.437 209.572 l
153.097 211.173 l
157.872 212.793 l
162.761 214.429 l
167.765 216.081 l
172.884 217.749 l
178.118 219.432 l
183.465 221.130 l
188.926 222.843 l
194.500 224.568 l
200.186 226.307 l
205.985 228.058 l
211.895 229.821 l
217.915 231.595 l
224.045 233.380 l
230.285 235.174 l
236.632 236.977 l
243.086 238.789 l
249.646 240.608 l
256.311 242.433 l
263.079 244.265 l
269.949 246.102 l
276.920 247.943 l
283.990 249.788 l
291.157 251.636 l
298.421 253.485 l
305.779 255.335 l
313.229 257.185 l
320.770 259.034 l
328.400 260.882 l
336.116 262.726 l
343.916 264.566 l
351.798 266.402 l
359.761 268.232 l
367.800 270.054 l
S
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
Q
q
q
1.00000 w
newpath
21.2584 181.258 m
367.741 181.258 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
272 202 19 20 rc
newpath
278.250 208.250 m
278.458 208.468 278.614 208.692 278.718 208.921  c
278.802 209.067 278.927 209.463 279.093 210.109  c
279.656 209.281 l
279.802 209.072 279.981 208.877 280.195 208.695  c
280.408 208.513 280.593 208.385 280.750 208.312  c
280.854 208.270 280.968 208.250 281.093 208.250  c
281.270 208.250 281.414 208.299 281.523 208.398  c
281.632 208.497 281.687 208.614 281.687 208.750  c
281.687 208.916 281.656 209.031 281.593 209.093  c
281.479 209.197 281.343 209.250 281.187 209.250  c
281.093 209.250 281.000 209.229 280.906 209.187  c
280.708 209.125 280.572 209.093 280.500 209.093  c
280.395 209.093 280.276 209.151 280.140 209.265  c
279.880 209.484 279.567 209.911 279.203 210.546  c
279.718 212.718 l
279.802 213.052 279.869 213.252 279.921 213.320  c
279.974 213.388 280.031 213.421 280.093 213.421  c
280.177 213.421 280.281 213.375 280.406 213.281  c
280.635 213.083 280.833 212.828 281.000 212.515  c
281.218 212.625 l
280.947 213.125 280.609 213.541 280.203 213.875  c
279.974 214.062 279.776 214.156 279.609 214.156  c
279.369 214.156 279.182 214.020 279.046 213.750  c
278.953 213.583 278.770 212.875 278.500 211.625  c
277.833 212.770 277.302 213.505 276.906 213.828  c
276.645 214.046 276.395 214.156 276.156 214.156  c
275.989 214.156 275.833 214.093 275.687 213.968  c
275.593 213.875 275.546 213.750 275.546 213.593  c
275.546 213.458 275.593 213.343 275.687 213.250  c
275.781 213.156 275.895 213.109 276.031 213.109  c
276.166 213.109 276.307 213.177 276.453 213.312  c
276.567 213.406 276.656 213.453 276.718 213.453  c
276.760 213.453 276.822 213.421 276.906 213.359  c
277.104 213.192 277.375 212.843 277.718 212.312  c
278.062 211.781 278.286 211.395 278.390 211.156  c
278.130 210.125 277.989 209.583 277.968 209.531  c
277.875 209.250 277.750 209.052 277.593 208.937  c
277.437 208.822 277.203 208.765 276.890 208.765  c
276.796 208.765 276.687 208.770 276.562 208.781  c
276.562 208.546 l
278.250 208.250 l
h
f
newpath
283.171 214.031 m
284.781 213.234 l
284.937 213.234 l
284.937 218.828 l
284.937 219.203 284.953 219.434 284.984 219.523  c
285.015 219.612 285.080 219.682 285.179 219.734  c
285.278 219.786 285.479 219.812 285.781 219.812  c
285.781 220.000 l
283.296 220.000 l
283.296 219.812 l
283.609 219.812 283.809 219.789 283.898 219.742  c
283.987 219.695 284.049 219.630 284.085 219.546  c
284.122 219.463 284.140 219.224 284.140 218.828  c
284.140 215.265 l
284.140 214.776 284.125 214.463 284.093 214.328  c
284.072 214.224 284.031 214.148 283.968 214.101  c
283.906 214.054 283.833 214.031 283.750 214.031  c
283.625 214.031 283.458 214.078 283.250 214.171  c
283.171 214.031 l
h
f
Q
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
21.2584 181.258 m
21.2584 185.258 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
19 220 7 13 rc
newpath
29.7968 227.437 m
21.2031 227.437 l
21.2031 226.765 l
29.7968 226.765 l
29.7968 227.437 l
h
f
Q
newpath
33.9531 229.343 m
33.3593 231.000 l
28.2812 231.000 l
28.2812 230.765 l
29.7708 229.401 30.8203 228.286 31.4296 227.421  c
32.0390 226.557 32.3437 225.770 32.3437 225.062  c
32.3437 224.510 32.1770 224.059 31.8437 223.710  c
31.5104 223.362 31.1093 223.187 30.6406 223.187  c
30.2239 223.187 29.8463 223.309 29.5078 223.554  c
29.1692 223.799 28.9218 224.161 28.7656 224.640  c
28.5312 224.640 l
28.6354 223.859 28.9062 223.260 29.3437 222.843  c
29.7812 222.427 30.3281 222.218 30.9843 222.218  c
31.6822 222.218 32.2656 222.442 32.7343 222.890  c
33.2031 223.338 33.4375 223.864 33.4375 224.468  c
33.4375 224.906 33.3333 225.343 33.1250 225.781  c
32.8125 226.468 32.3072 227.192 31.6093 227.953  c
30.5572 229.109 29.8958 229.807 29.6250 230.046  c
31.8750 230.046 l
32.3333 230.046 32.6536 230.028 32.8359 229.992  c
33.0182 229.955 33.1849 229.885 33.3359 229.781  c
33.4869 229.677 33.6145 229.531 33.7187 229.343  c
33.9531 229.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
107.879 181.258 m
107.879 185.258 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
105 220 7 13 rc
newpath
115.796 227.437 m
107.203 227.437 l
107.203 226.765 l
115.796 226.765 l
115.796 227.437 l
h
f
Q
newpath
115.531 223.234 m
117.625 222.218 l
117.828 222.218 l
117.828 229.484 l
117.828 229.963 117.849 230.263 117.890 230.382  c
117.932 230.502 118.015 230.593 118.140 230.656  c
118.265 230.718 118.520 230.755 118.906 230.765  c
118.906 231.000 l
115.671 231.000 l
115.671 230.765 l
116.078 230.755 116.341 230.718 116.460 230.656  c
116.580 230.593 116.664 230.510 116.710 230.406  c
116.757 230.302 116.781 229.994 116.781 229.484  c
116.781 224.843 l
116.781 224.208 116.760 223.802 116.718 223.625  c
116.687 223.489 116.632 223.390 116.554 223.328  c
116.476 223.265 116.380 223.234 116.265 223.234  c
116.109 223.234 115.895 223.302 115.625 223.437  c
115.531 223.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 181.258 m
194.500 185.258 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
191.468 224.750 m
191.468 223.770 191.617 222.924 191.914 222.210  c
192.210 221.497 192.604 220.968 193.093 220.625  c
193.479 220.354 193.875 220.218 194.281 220.218  c
194.937 220.218 195.526 220.552 196.046 221.218  c
196.703 222.052 197.031 223.182 197.031 224.609  c
197.031 225.609 196.888 226.458 196.601 227.156  c
196.315 227.854 195.947 228.362 195.500 228.679  c
195.052 228.997 194.625 229.156 194.218 229.156  c
193.395 229.156 192.708 228.671 192.156 227.703  c
191.697 226.880 191.468 225.895 191.468 224.750  c
h
192.718 224.906 m
192.718 226.093 192.864 227.062 193.156 227.812  c
193.395 228.437 193.755 228.750 194.234 228.750  c
194.463 228.750 194.700 228.648 194.945 228.445  c
195.190 228.242 195.375 227.895 195.500 227.406  c
195.697 226.687 195.796 225.661 195.796 224.328  c
195.796 223.349 195.692 222.531 195.484 221.875  c
195.338 221.385 195.140 221.041 194.890 220.843  c
194.724 220.708 194.515 220.640 194.265 220.640  c
193.984 220.640 193.729 220.765 193.500 221.015  c
193.197 221.369 192.992 221.924 192.882 222.679  c
192.773 223.434 192.718 224.177 192.718 224.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
281.120 181.258 m
281.120 185.258 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
284.531 223.234 m
286.625 222.218 l
286.828 222.218 l
286.828 229.484 l
286.828 229.963 286.849 230.263 286.890 230.382  c
286.932 230.502 287.015 230.593 287.140 230.656  c
287.265 230.718 287.520 230.755 287.906 230.765  c
287.906 231.000 l
284.671 231.000 l
284.671 230.765 l
285.078 230.755 285.341 230.718 285.460 230.656  c
285.580 230.593 285.664 230.510 285.710 230.406  c
285.757 230.302 285.781 229.994 285.781 229.484  c
285.781 224.843 l
285.781 224.208 285.760 223.802 285.718 223.625  c
285.687 223.489 285.632 223.390 285.554 223.328  c
285.476 223.265 285.380 223.234 285.265 223.234  c
285.109 223.234 284.895 223.302 284.625 223.437  c
284.531 223.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
367.741 181.258 m
367.741 185.258 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
374.953 229.343 m
374.359 231.000 l
369.281 231.000 l
369.281 230.765 l
370.770 229.401 371.820 228.286 372.429 227.421  c
373.039 226.557 373.343 225.770 373.343 225.062  c
373.343 224.510 373.177 224.059 372.843 223.710  c
372.510 223.362 372.109 223.187 371.640 223.187  c
371.224 223.187 370.846 223.309 370.507 223.554  c
370.169 223.799 369.921 224.161 369.765 224.640  c
369.531 224.640 l
369.635 223.859 369.906 223.260 370.343 222.843  c
370.781 222.427 371.328 222.218 371.984 222.218  c
372.682 222.218 373.265 222.442 373.734 222.890  c
374.203 223.338 374.437 223.864 374.437 224.468  c
374.437 224.906 374.333 225.343 374.125 225.781  c
373.812 226.468 373.307 227.192 372.609 227.953  c
371.557 229.109 370.895 229.807 370.625 230.046  c
372.875 230.046 l
373.333 230.046 373.653 230.028 373.835 229.992  c
374.018 229.955 374.184 229.885 374.335 229.781  c
374.487 229.677 374.614 229.531 374.718 229.343  c
374.953 229.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
194.500 354.500 m
194.500 8.01696 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
150 84 19 20 rc
newpath
156.250 90.2500 m
156.458 90.4687 156.614 90.6927 156.718 90.9218  c
156.802 91.0677 156.927 91.4635 157.093 92.1093  c
157.656 91.2812 l
157.802 91.0729 157.981 90.8776 158.195 90.6953  c
158.408 90.5130 158.593 90.3854 158.750 90.3125  c
158.854 90.2708 158.968 90.2500 159.093 90.2500  c
159.270 90.2500 159.414 90.2994 159.523 90.3984  c
159.632 90.4974 159.687 90.6145 159.687 90.7500  c
159.687 90.9166 159.656 91.0312 159.593 91.0937  c
159.479 91.1979 159.343 91.2500 159.187 91.2500  c
159.093 91.2500 159.000 91.2291 158.906 91.1875  c
158.708 91.1250 158.572 91.0937 158.500 91.0937  c
158.395 91.0937 158.276 91.1510 158.140 91.2656  c
157.880 91.4843 157.567 91.9114 157.203 92.5468  c
157.718 94.7187 l
157.802 95.0520 157.869 95.2526 157.921 95.3203  c
157.974 95.3880 158.031 95.4218 158.093 95.4218  c
158.177 95.4218 158.281 95.3750 158.406 95.2812  c
158.635 95.0833 158.833 94.8281 159.000 94.5156  c
159.218 94.6250 l
158.947 95.1250 158.609 95.5416 158.203 95.8750  c
157.974 96.0625 157.776 96.1562 157.609 96.1562  c
157.369 96.1562 157.182 96.0208 157.046 95.7500  c
156.953 95.5833 156.770 94.8750 156.500 93.6250  c
155.833 94.7708 155.302 95.5052 154.906 95.8281  c
154.645 96.0468 154.395 96.1562 154.156 96.1562  c
153.989 96.1562 153.833 96.0937 153.687 95.9687  c
153.593 95.8750 153.546 95.7500 153.546 95.5937  c
153.546 95.4583 153.593 95.3437 153.687 95.2500  c
153.781 95.1562 153.895 95.1093 154.031 95.1093  c
154.166 95.1093 154.307 95.1770 154.453 95.3125  c
154.567 95.4062 154.656 95.4531 154.718 95.4531  c
154.760 95.4531 154.822 95.4218 154.906 95.3593  c
155.104 95.1927 155.375 94.8437 155.718 94.3125  c
156.062 93.7812 156.286 93.3958 156.390 93.1562  c
156.130 92.1250 155.989 91.5833 155.968 91.5312  c
155.875 91.2500 155.750 91.0520 155.593 90.9375  c
155.437 90.8229 155.203 90.7656 154.890 90.7656  c
154.796 90.7656 154.687 90.7708 154.562 90.7812  c
154.562 90.5468 l
156.250 90.2500 l
h
f
newpath
164.578 100.718 m
164.125 102.000 l
160.218 102.000 l
160.218 101.812 l
161.364 100.770 162.171 99.9166 162.640 99.2500  c
163.109 98.5833 163.343 97.9739 163.343 97.4218  c
163.343 97.0052 163.216 96.6614 162.960 96.3906  c
162.705 96.1197 162.395 95.9843 162.031 95.9843  c
161.708 95.9843 161.416 96.0807 161.156 96.2734  c
160.895 96.4661 160.708 96.7447 160.593 97.1093  c
160.406 97.1093 l
160.489 96.5052 160.697 96.0416 161.031 95.7187  c
161.364 95.3958 161.786 95.2343 162.296 95.2343  c
162.828 95.2343 163.276 95.4088 163.640 95.7578  c
164.005 96.1067 164.187 96.5156 164.187 96.9843  c
164.187 97.3177 164.109 97.6510 163.953 97.9843  c
163.703 98.5156 163.312 99.0729 162.781 99.6562  c
161.968 100.541 161.458 101.078 161.250 101.265  c
162.984 101.265 l
163.338 101.265 163.585 101.252 163.726 101.226  c
163.867 101.200 163.994 101.145 164.109 101.062  c
164.224 100.979 164.322 100.864 164.406 100.718  c
164.578 100.718 l
h
f
Q
cliprestore
newpath
0 0 m
0 363.000 l
390.000 363.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
194.500 354.500 m
190.500 354.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
177 380 7 13 rc
newpath
187.796 387.437 m
179.203 387.437 l
179.203 386.765 l
187.796 386.765 l
187.796 387.437 l
h
f
Q
newpath
191.953 389.343 m
191.359 391.000 l
186.281 391.000 l
186.281 390.765 l
187.770 389.401 188.820 388.286 189.429 387.421  c
190.039 386.557 190.343 385.770 190.343 385.062  c
190.343 384.510 190.177 384.059 189.843 383.710  c
189.510 383.362 189.109 383.187 188.640 383.187  c
188.224 383.187 187.846 383.309 187.507 383.554  c
187.169 383.799 186.921 384.161 186.765 384.640  c
186.531 384.640 l
186.635 383.859 186.906 383.260 187.343 382.843  c
187.781 382.427 188.328 382.218 188.984 382.218  c
189.682 382.218 190.265 382.442 190.734 382.890  c
191.203 383.338 191.437 383.864 191.437 384.468  c
191.437 384.906 191.333 385.343 191.125 385.781  c
190.812 386.468 190.307 387.192 189.609 387.953  c
188.557 389.109 187.895 389.807 187.625 390.046  c
189.875 390.046 l
190.333 390.046 190.653 390.028 190.835 389.992  c
191.018 389.955 191.184 389.885 191.335 389.781  c
191.487 389.677 191.614 389.531 191.718 389.343  c
191.953 389.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 267.879 m
190.500 267.879 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
q
177 293 7 13 rc
newpath
187.796 300.437 m
179.203 300.437 l
179.203 299.765 l
187.796 299.765 l
187.796 300.437 l
h
f
Q
newpath
187.531 296.234 m
189.625 295.218 l
189.828 295.218 l
189.828 302.484 l
189.828 302.963 189.849 303.263 189.890 303.382  c
189.932 303.502 190.015 303.593 190.140 303.656  c
190.265 303.718 190.520 303.755 190.906 303.765  c
190.906 304.000 l
187.671 304.000 l
187.671 303.765 l
188.078 303.755 188.341 303.718 188.460 303.656  c
188.580 303.593 188.664 303.510 188.710 303.406  c
188.757 303.302 188.781 302.994 188.781 302.484  c
188.781 297.843 l
188.781 297.208 188.760 296.802 188.718 296.625  c
188.687 296.489 188.632 296.390 188.554 296.328  c
188.476 296.265 188.380 296.234 188.265 296.234  c
188.109 296.234 187.895 296.302 187.625 296.437  c
187.531 296.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 181.258 m
190.500 181.258 l
S
Q
q
0 w
newpath
194.500 94.6377 m
190.500 94.6377 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
187.531 123.234 m
189.625 122.218 l
189.828 122.218 l
189.828 129.484 l
189.828 129.963 189.849 130.263 189.890 130.382  c
189.932 130.502 190.015 130.593 190.140 130.656  c
190.265 130.718 190.520 130.755 190.906 130.765  c
190.906 131.000 l
187.671 131.000 l
187.671 130.765 l
188.078 130.755 188.341 130.718 188.460 130.656  c
188.580 130.593 188.664 130.510 188.710 130.406  c
188.757 130.302 188.781 129.994 188.781 129.484  c
188.781 124.843 l
188.781 124.208 188.760 123.802 188.718 123.625  c
188.687 123.489 188.632 123.390 188.554 123.328  c
188.476 123.265 188.380 123.234 188.265 123.234  c
188.109 123.234 187.895 123.302 187.625 123.437  c
187.531 123.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
q
0 w
newpath
194.500 8.01696 m
190.500 8.01696 l
S
[ 1.00000 0 0 1.00000 -5.00000 -32.0000 ] concat
newpath
191.953 43.3437 m
191.359 45.0000 l
186.281 45.0000 l
186.281 44.7656 l
187.770 43.4010 188.820 42.2864 189.429 41.4218  c
190.039 40.5572 190.343 39.7708 190.343 39.0625  c
190.343 38.5104 190.177 38.0599 189.843 37.7109  c
189.510 37.3619 189.109 37.1875 188.640 37.1875  c
188.224 37.1875 187.846 37.3099 187.507 37.5546  c
187.169 37.7994 186.921 38.1614 186.765 38.6406  c
186.531 38.6406 l
186.635 37.8593 186.906 37.2604 187.343 36.8437  c
187.781 36.4270 188.328 36.2187 188.984 36.2187  c
189.682 36.2187 190.265 36.4427 190.734 36.8906  c
191.203 37.3385 191.437 37.8645 191.437 38.4687  c
191.437 38.9062 191.333 39.3437 191.125 39.7812  c
190.812 40.4687 190.307 41.1927 189.609 41.9531  c
188.557 43.1093 187.895 43.8072 187.625 44.0468  c
189.875 44.0468 l
190.333 44.0468 190.653 44.0286 190.835 43.9921  c
191.018 43.9557 191.184 43.8854 191.335 43.7812  c
191.487 43.6770 191.614 43.5312 191.718 43.3437  c
191.953 43.3437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 32.0000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
5 5 391 28 rc
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 392 27 rc
newpath
103.078 23.0000 m
103.078 6.37500 l
109.296 6.37500 l
112.671 6.37500 114.359 7.75000 114.359 10.5000  c
114.359 11.5208 114.072 12.4531 113.500 13.2968  c
112.927 14.1406 112.140 14.7864 111.140 15.2343  c
116.578 23.0000 l
112.359 23.0000 l
108.250 16.2031 l
106.328 16.2031 l
106.328 23.0000 l
103.078 23.0000 l
h
106.328 13.9218 m
107.125 13.9218 l
109.635 13.9218 110.890 12.9062 110.890 10.8750  c
110.890 9.39583 109.770 8.65625 107.531 8.65625  c
106.328 8.65625 l
106.328 13.9218 l
h
129.125 22.5781 m
127.541 23.0468 126.041 23.2812 124.625 23.2812  c
122.562 23.2812 120.937 22.6979 119.750 21.5312  c
118.562 20.3645 117.968 18.7708 117.968 16.7500  c
117.968 14.8333 118.513 13.2942 119.601 12.1328  c
120.690 10.9713 122.130 10.3906 123.921 10.3906  c
125.724 10.3906 127.041 10.9583 127.875 12.0937  c
128.708 13.2291 129.125 15.0312 129.125 17.5000  c
121.468 17.5000 l
121.697 19.8437 122.989 21.0156 125.343 21.0156  c
126.458 21.0156 127.718 20.7604 129.125 20.2500  c
129.125 22.5781 l
h
121.421 15.6250 m
125.843 15.6250 l
125.843 13.5208 125.166 12.4687 123.812 12.4687  c
122.437 12.4687 121.640 13.5208 121.421 15.6250  c
h
132.078 27.4375 m
132.078 10.6718 l
135.406 10.6718 l
135.406 13.0000 l
136.260 11.2604 137.604 10.3906 139.437 10.3906  c
140.916 10.3906 142.080 10.9322 142.929 12.0156  c
143.778 13.0989 144.203 14.5937 144.203 16.5000  c
144.203 18.5625 143.724 20.2083 142.765 21.4375  c
141.807 22.6666 140.526 23.2812 138.921 23.2812  c
137.619 23.2812 136.447 22.7708 135.406 21.7500  c
135.406 27.4375 l
132.078 27.4375 l
h
135.406 19.7812 m
136.208 20.6770 137.067 21.1250 137.984 21.1250  c
138.796 21.1250 139.447 20.7291 139.937 19.9375  c
140.427 19.1458 140.671 18.0937 140.671 16.7812  c
140.671 14.2604 139.859 13.0000 138.234 13.0000  c
137.255 13.0000 136.312 13.6302 135.406 14.8906  c
135.406 19.7812 l
h
154.703 23.0000 m
154.703 20.6718 l
153.630 22.4114 152.229 23.2812 150.500 23.2812  c
149.406 23.2812 148.539 22.9322 147.898 22.2343  c
147.257 21.5364 146.937 20.5885 146.937 19.3906  c
146.937 10.6718 l
150.265 10.6718 l
150.265 18.5625 l
150.265 19.9583 150.734 20.6562 151.671 20.6562  c
152.724 20.6562 153.734 19.9114 154.703 18.4218  c
154.703 10.6718 l
158.031 10.6718 l
158.031 23.0000 l
154.703 23.0000 l
h
162.078 23.0000 m
162.078 5.26562 l
165.406 5.26562 l
165.406 23.0000 l
162.078 23.0000 l
h
168.750 22.6093 m
168.750 20.1718 l
170.395 20.8593 171.802 21.2031 172.968 21.2031  c
174.333 21.2031 175.015 20.7395 175.015 19.8125  c
175.015 19.2083 174.453 18.6822 173.328 18.2343  c
172.218 17.7812 l
170.989 17.2916 170.114 16.7630 169.593 16.1953  c
169.072 15.6276 168.812 14.9218 168.812 14.0781  c
168.812 12.9114 169.257 12.0052 170.148 11.3593  c
171.039 10.7135 172.286 10.3906 173.890 10.3906  c
174.890 10.3906 176.083 10.5364 177.468 10.8281  c
177.468 13.1562 l
176.135 12.6979 175.031 12.4687 174.156 12.4687  c
172.781 12.4687 172.093 12.8958 172.093 13.7500  c
172.093 14.3125 172.599 14.7864 173.609 15.1718  c
174.578 15.5468 l
176.026 16.0885 177.031 16.6406 177.593 17.2031  c
178.156 17.7656 178.437 18.4895 178.437 19.3750  c
178.437 20.5312 177.958 21.4713 177.000 22.1953  c
176.041 22.9192 174.791 23.2812 173.250 23.2812  c
171.760 23.2812 170.260 23.0572 168.750 22.6093  c
h
182.078 23.0000 m
182.078 10.6718 l
185.406 10.6718 l
185.406 23.0000 l
182.078 23.0000 l
h
182.078 8.59375 m
182.078 5.81250 l
185.406 5.81250 l
185.406 8.59375 l
182.078 8.59375 l
h
192.125 23.0000 m
187.421 10.6718 l
190.921 10.6718 l
194.375 19.5625 l
197.796 10.6718 l
200.203 10.6718 l
195.453 23.0000 l
192.125 23.0000 l
h
213.125 22.5781 m
211.541 23.0468 210.041 23.2812 208.625 23.2812  c
206.562 23.2812 204.937 22.6979 203.750 21.5312  c
202.562 20.3645 201.968 18.7708 201.968 16.7500  c
201.968 14.8333 202.513 13.2942 203.601 12.1328  c
204.690 10.9713 206.130 10.3906 207.921 10.3906  c
209.724 10.3906 211.041 10.9583 211.875 12.0937  c
212.708 13.2291 213.125 15.0312 213.125 17.5000  c
205.468 17.5000 l
205.697 19.8437 206.989 21.0156 209.343 21.0156  c
210.458 21.0156 211.718 20.7604 213.125 20.2500  c
213.125 22.5781 l
h
205.421 15.6250 m
209.843 15.6250 l
209.843 13.5208 209.166 12.4687 207.812 12.4687  c
206.437 12.4687 205.640 13.5208 205.421 15.6250  c
h
224.078 23.0000 m
224.078 6.37500 l
234.531 6.37500 l
234.531 8.65625 l
227.531 8.65625 l
227.531 13.7187 l
233.281 13.7187 l
233.281 16.0000 l
227.531 16.0000 l
227.531 23.0000 l
224.078 23.0000 l
h
242.250 23.2812 m
240.333 23.2812 238.807 22.6979 237.671 21.5312  c
236.536 20.3645 235.968 18.7968 235.968 16.8281  c
235.968 14.8385 236.539 13.2682 237.679 12.1171  c
238.820 10.9661 240.369 10.3906 242.328 10.3906  c
244.296 10.3906 245.854 10.9661 247.000 12.1171  c
248.145 13.2682 248.718 14.8333 248.718 16.8125  c
248.718 18.8333 248.145 20.4166 247.000 21.5625  c
245.854 22.7083 244.270 23.2812 242.250 23.2812  c
h
242.312 21.2031 m
244.218 21.2031 245.171 19.7395 245.171 16.8125  c
245.171 15.4687 244.919 14.4088 244.414 13.6328  c
243.908 12.8567 243.213 12.4687 242.328 12.4687  c
241.453 12.4687 240.763 12.8567 240.257 13.6328  c
239.752 14.4088 239.500 15.4739 239.500 16.8281  c
239.500 18.1718 239.752 19.2369 240.257 20.0234  c
240.763 20.8099 241.447 21.2031 242.312 21.2031  c
h
261.171 22.7343 m
259.796 23.0989 258.520 23.2812 257.343 23.2812  c
255.375 23.2812 253.820 22.7031 252.679 21.5468  c
251.539 20.3906 250.968 18.8177 250.968 16.8281  c
250.968 14.8072 251.557 13.2291 252.734 12.0937  c
253.911 10.9583 255.536 10.3906 257.609 10.3906  c
258.609 10.3906 259.765 10.5520 261.078 10.8750  c
261.078 13.2812 l
259.713 12.8333 258.625 12.6093 257.812 12.6093  c
256.812 12.6093 256.010 12.9921 255.406 13.7578  c
254.802 14.5234 254.500 15.5364 254.500 16.7968  c
254.500 18.0989 254.825 19.1380 255.476 19.9140  c
256.127 20.6901 257.000 21.0781 258.093 21.0781  c
259.093 21.0781 260.119 20.8593 261.171 20.4218  c
261.171 22.7343 l
h
271.703 23.0000 m
271.703 20.6718 l
270.630 22.4114 269.229 23.2812 267.500 23.2812  c
266.406 23.2812 265.539 22.9322 264.898 22.2343  c
264.257 21.5364 263.937 20.5885 263.937 19.3906  c
263.937 10.6718 l
267.265 10.6718 l
267.265 18.5625 l
267.265 19.9583 267.734 20.6562 268.671 20.6562  c
269.724 20.6562 270.734 19.9114 271.703 18.4218  c
271.703 10.6718 l
275.031 10.6718 l
275.031 23.0000 l
271.703 23.0000 l
h
278.750 22.6093 m
278.750 20.1718 l
280.395 20.8593 281.802 21.2031 282.968 21.2031  c
284.333 21.2031 285.015 20.7395 285.015 19.8125  c
285.015 19.2083 284.453 18.6822 283.328 18.2343  c
282.218 17.7812 l
280.989 17.2916 280.114 16.7630 279.593 16.1953  c
279.072 15.6276 278.812 14.9218 278.812 14.0781  c
278.812 12.9114 279.257 12.0052 280.148 11.3593  c
281.039 10.7135 282.286 10.3906 283.890 10.3906  c
284.890 10.3906 286.083 10.5364 287.468 10.8281  c
287.468 13.1562 l
286.135 12.6979 285.031 12.4687 284.156 12.4687  c
282.781 12.4687 282.093 12.8958 282.093 13.7500  c
282.093 14.3125 282.599 14.7864 283.609 15.1718  c
284.578 15.5468 l
286.026 16.0885 287.031 16.6406 287.593 17.2031  c
288.156 17.7656 288.437 18.4895 288.437 19.3750  c
288.437 20.5312 287.958 21.4713 287.000 22.1953  c
286.041 22.9192 284.791 23.2812 283.250 23.2812  c
281.760 23.2812 280.260 23.0572 278.750 22.6093  c
h
f
Q
cliprestore
newpath
0 0 m
0 28.0000 l
391.000 28.0000 l
391.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
cliprestore
Q
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
